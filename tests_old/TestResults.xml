<?xml version="1.0" encoding="utf-8" standalone="no"?>
<test-results xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="nunit_schema_2.5.xsd" name="Pester" total="296" errors="0" failures="99" not-run="0" inconclusive="0" ignored="0" skipped="0" invalid="0" date="2025-08-17" time="12:05:18">
  <environment nunit-version="2.5.8.0" cwd="/workspaces/ps-sqlite" clr-version="8.0.12" user="node" platform="Linux" machine-name="f389b0d092e5" os-version="6.6.76-08096-g300882a0a131" user-domain="" />
  <culture-info current-culture="en-US" current-uiculture="en-US" />
  <test-suite type="TestFixture" name="Pester" executed="True" result="Failure" success="False" time="46.5948" asserts="0" description="Pester">
    <results>
      <test-suite type="TestFixture" name="/workspaces/ps-sqlite/tests/main.Tests.ps1" executed="True" result="Success" success="True" time="1.4554" asserts="0" description="/workspaces/ps-sqlite/tests/main.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="メインスクリプトテスト" executed="True" result="Success" success="True" time="0.342" asserts="0" description="メインスクリプトテスト">
            <results>
              <test-suite type="TestFixture" name="メインスクリプトテスト.設定読み込み" executed="True" result="Success" success="True" time="0.2356" asserts="0" description="メインスクリプトテスト.設定読み込み">
                <results>
                  <test-case description="設定ファイルを正常に読み込むこと" name="メインスクリプトテスト.設定読み込み.設定ファイルを正常に読み込むこと" time="0.1865" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="メインスクリプトテスト.パラメータ検証" executed="True" result="Success" success="True" time="0.2906" asserts="0" description="メインスクリプトテスト.パラメータ検証">
                <results>
                  <test-case description="必須パラメータを検証すること" name="メインスクリプトテスト.パラメータ検証.必須パラメータを検証すること" time="0.018" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="メインスクリプトテスト.ファイル操作" executed="True" result="Success" success="True" time="0.3168" asserts="0" description="メインスクリプトテスト.ファイル操作">
                <results>
                  <test-case description="タイムスタンプフォーマットを正しく処理すること" name="メインスクリプトテスト.ファイル操作.タイムスタンプフォーマットを正しく処理すること" time="0.0124" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="パフォーマンステスト" executed="True" result="Success" success="True" time="0.7768" asserts="0" description="パフォーマンステスト">
            <results>
              <test-suite type="TestFixture" name="パフォーマンステスト.メモリ使用量" executed="True" result="Success" success="True" time="0.4216" asserts="0" description="パフォーマンステスト.メモリ使用量">
                <results>
                  <test-case description="操作中にメモリリークしないこと" name="パフォーマンステスト.メモリ使用量.操作中にメモリリークしないこと" time="0.4077" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="/workspaces/ps-sqlite/tests/Process/Invoke-CsvImport.Tests.ps1" executed="True" result="Failure" success="False" time="1.3134" asserts="0" description="/workspaces/ps-sqlite/tests/Process/Invoke-CsvImport.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Invoke-CsvImport テスト" executed="True" result="Failure" success="False" time="0.9454" asserts="0" description="Invoke-CsvImport テスト">
            <results>
              <test-suite type="TestFixture" name="Invoke-CsvImport テスト.CSVファイル読み取り" executed="True" result="Success" success="True" time="0.1356" asserts="0" description="Invoke-CsvImport テスト.CSVファイル読み取り">
                <results>
                  <test-case description="有効なCSVファイルを正常に読み取ること" name="Invoke-CsvImport テスト.CSVファイル読み取り.有効なCSVファイルを正常に読み取ること" time="0.0551" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="存在しないCSVファイルを適切に処理すること" name="Invoke-CsvImport テスト.CSVファイル読み取り.存在しないCSVファイルを適切に処理すること" time="0.0295" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="空のCSVファイルを処理すること" name="Invoke-CsvImport テスト.CSVファイル読み取り.空のCSVファイルを処理すること" time="0.0112" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="CSVエンコーディングを正しく検出すること" name="Invoke-CsvImport テスト.CSVファイル読み取り.CSVエンコーディングを正しく検出すること" time="0.0235" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Invoke-CsvImport テスト.データフィルタリング" executed="True" result="Success" success="True" time="0.2454" asserts="0" description="Invoke-CsvImport テスト.データフィルタリング">
                <results>
                  <test-case description="Z接頭辞の従業員IDを除外すること" name="Invoke-CsvImport テスト.データフィルタリング.Z接頭辞の従業員IDを除外すること" time="0.027" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Y接頭辞の従業員IDを除外すること" name="Invoke-CsvImport テスト.データフィルタリング.Y接頭辞の従業員IDを除外すること" time="0.0238" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="複数のフィルタルールを同時に適用すること" name="Invoke-CsvImport テスト.データフィルタリング.複数のフィルタルールを同時に適用すること" time="0.0255" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="フィルタリング後の空の結果を処理すること" name="Invoke-CsvImport テスト.データフィルタリング.フィルタリング後の空の結果を処理すること" time="0.0179" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Invoke-CsvImport テスト.データ検証" executed="True" result="Failure" success="False" time="0.4728" asserts="0" description="Invoke-CsvImport テスト.データ検証">
                <results>
                  <test-case description="必須フィールドの存在を検証すること" name="Invoke-CsvImport テスト.データ検証.必須フィールドの存在を検証すること" time="0.0178" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="一貫性のないCSV構造を処理すること" name="Invoke-CsvImport テスト.データ検証.一貫性のないCSV構造を処理すること" time="0.0275" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="データ型と形式を検証すること" name="Invoke-CsvImport テスト.データ検証.データ型と形式を検証すること" time="0.0468" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="特殊文字とエンコーディングを処理すること" name="Invoke-CsvImport テスト.データ検証.特殊文字とエンコーディングを処理すること" time="0.119" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 5, but got 0.</message>
                      <stack-trace>at $japaneseNames.Count | Should -Be 5  # All names contain Japanese characters, /workspaces/ps-sqlite/tests/Process/Invoke-CsvImport.Tests.ps1:210
at &lt;ScriptBlock&gt;, /workspaces/ps-sqlite/tests/Process/Invoke-CsvImport.Tests.ps1:210</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Invoke-CsvImport テスト.パフォーマンスとメモリ" executed="True" result="Success" success="True" time="0.7319" asserts="0" description="Invoke-CsvImport テスト.パフォーマンスとメモリ">
                <results>
                  <test-case description="大きなCSVファイルを効率的に処理すること" name="Invoke-CsvImport テスト.パフォーマンスとメモリ.大きなCSVファイルを効率的に処理すること" time="0.0222" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="大きなデータセットでメモリリークを起こさないこと" name="Invoke-CsvImport テスト.パフォーマンスとメモリ.大きなデータセットでメモリリークを起こさないこと" time="0.2165" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Invoke-CsvImport テスト.エラーハンドリング" executed="True" result="Failure" success="False" time="0.8172" asserts="0" description="Invoke-CsvImport テスト.エラーハンドリング">
                <results>
                  <test-case description="破損したCSVファイルを適切に処理すること" name="Invoke-CsvImport テスト.エラーハンドリング.破損したCSVファイルを適切に処理すること" time="0.0469" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 14
Actual length:   7
Strings differ at index 0.
Expected: 'corrupted_file'
But was:  'success'
           ^</message>
                      <stack-trace>at $result | Should -Be "corrupted_file", /workspaces/ps-sqlite/tests/Process/Invoke-CsvImport.Tests.ps1:276
at &lt;ScriptBlock&gt;, /workspaces/ps-sqlite/tests/Process/Invoke-CsvImport.Tests.ps1:276</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="意味のあるエラーメッセージを提供すること" name="Invoke-CsvImport テスト.エラーハンドリング.意味のあるエラーメッセージを提供すること" time="0.0126" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="アクセス拒否エラーを処理すること" name="Invoke-CsvImport テスト.エラーハンドリング.アクセス拒否エラーを処理すること" time="0.013" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Invoke-CsvImport テスト.履歴とバックアップ" executed="True" result="Success" success="True" time="0.8852" asserts="0" description="Invoke-CsvImport テスト.履歴とバックアップ">
                <results>
                  <test-case description="タイムスタンプ付きバックアップコピーを作成すること" name="Invoke-CsvImport テスト.履歴とバックアップ.タイムスタンプ付きバックアップコピーを作成すること" time="0.009" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="処理中に元ファイルを保持すること" name="Invoke-CsvImport テスト.履歴とバックアップ.処理中に元ファイルを保持すること" time="0.0481" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Invoke-CsvImport テスト.設定統合" executed="True" result="Success" success="True" time="0.934" asserts="0" description="Invoke-CsvImport テスト.設定統合">
                <results>
                  <test-case description="列マッピング設定を尊重すること" name="Invoke-CsvImport テスト.設定統合.列マッピング設定を尊重すること" time="0.016" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="設定ベースのフィルタを適用すること" name="Invoke-CsvImport テスト.設定統合.設定ベースのフィルタを適用すること" time="0.0196" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="CSVインポート統合テスト" executed="True" result="Success" success="True" time="0.9956" asserts="0" description="CSVインポート統合テスト">
            <results>
              <test-suite type="TestFixture" name="CSVインポート統合テスト.エンドツーエンドインポートプロセス" executed="True" result="Success" success="True" time="0.0394" asserts="0" description="CSVインポート統合テスト.エンドツーエンドインポートプロセス">
                <results>
                  <test-case description="完全なインポートワークフローを完了すること" name="CSVインポート統合テスト.エンドツーエンドインポートプロセス.完全なインポートワークフローを完了すること" time="0.0097" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="プロセス全体でデータ整合性を維持すること" name="CSVインポート統合テスト.エンドツーエンドインポートプロセス.プロセス全体でデータ整合性を維持すること" time="0.0192" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="/workspaces/ps-sqlite/tests/Process/Invoke-DatabaseInitialization.Tests.ps1" executed="True" result="Failure" success="False" time="0.7019" asserts="0" description="/workspaces/ps-sqlite/tests/Process/Invoke-DatabaseInitialization.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Invoke-DatabaseInitialization テスト" executed="True" result="Failure" success="False" time="0.5177" asserts="0" description="Invoke-DatabaseInitialization テスト">
            <results>
              <test-suite type="TestFixture" name="Invoke-DatabaseInitialization テスト.SQL生成" executed="True" result="Success" success="True" time="0.069" asserts="0" description="Invoke-DatabaseInitialization テスト.SQL生成">
                <results>
                  <test-case description="正しいCREATE TABLE文を生成すること" name="Invoke-DatabaseInitialization テスト.SQL生成.正しいCREATE TABLE文を生成すること" time="0.0292" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="制約のないテーブルを処理すること" name="Invoke-DatabaseInitialization テスト.SQL生成.制約のないテーブルを処理すること" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="適切なインデックス文を生成すること" name="Invoke-DatabaseInitialization テスト.SQL生成.適切なインデックス文を生成すること" time="0.0105" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="複合インデックス文を生成すること" name="Invoke-DatabaseInitialization テスト.SQL生成.複合インデックス文を生成すること" time="0.0085" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Invoke-DatabaseInitialization テスト.データベースファイル操作" executed="True" result="Success" success="True" time="0.1556" asserts="0" description="Invoke-DatabaseInitialization テスト.データベースファイル操作">
                <results>
                  <test-case description="存在しない場合に新しいデータベースファイルを作成すること" name="Invoke-DatabaseInitialization テスト.データベースファイル操作.存在しない場合に新しいデータベースファイルを作成すること" time="0.0199" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="既存データベースを適切に処理すること" name="Invoke-DatabaseInitialization テスト.データベースファイル操作.既存データベースを適切に処理すること" time="0.0295" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="データベースファイルのアクセス権を検証すること" name="Invoke-DatabaseInitialization テスト.データベースファイル操作.データベースファイルのアクセス権を検証すること" time="0.0224" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Invoke-DatabaseInitialization テスト.テーブルスキーマ検証" executed="True" result="Success" success="True" time="0.2319" asserts="0" description="Invoke-DatabaseInitialization テスト.テーブルスキーマ検証">
                <results>
                  <test-case description="必須列の存在を検証すること" name="Invoke-DatabaseInitialization テスト.テーブルスキーマ検証.必須列の存在を検証すること" time="0.0267" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="列のデータ型を検証すること" name="Invoke-DatabaseInitialization テスト.テーブルスキーマ検証.列のデータ型を検証すること" time="0.013" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="制約構文を検証すること" name="Invoke-DatabaseInitialization テスト.テーブルスキーマ検証.制約構文を検証すること" time="0.0116" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="重複した列名を検出すること" name="Invoke-DatabaseInitialization テスト.テーブルスキーマ検証.重複した列名を検出すること" time="0.0129" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Invoke-DatabaseInitialization テスト.エラーハンドリング" executed="True" result="Failure" success="False" time="0.3193" asserts="0" description="Invoke-DatabaseInitialization テスト.エラーハンドリング">
                <results>
                  <test-case description="無効なテーブル設定を適切に処理すること" name="Invoke-DatabaseInitialization テスト.エラーハンドリング.無効なテーブル設定を適切に処理すること" time="0.014" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="SQL実行エラーを処理すること" name="Invoke-DatabaseInitialization テスト.エラーハンドリング.SQL実行エラーを処理すること" time="0.0233" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
String lengths are both 9.
Strings differ at index 4.
Expected: 'sql_error'
But was:  'sql_valid'
           ----^</message>
                      <stack-trace>at $result | Should -Be "sql_error", /workspaces/ps-sqlite/tests/Process/Invoke-DatabaseInitialization.Tests.ps1:326
at &lt;ScriptBlock&gt;, /workspaces/ps-sqlite/tests/Process/Invoke-DatabaseInitialization.Tests.ps1:326</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="データベース接続失敗を処理すること" name="Invoke-DatabaseInitialization テスト.エラーハンドリング.データベース接続失敗を処理すること" time="0.0174" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="意味のあるエラーメッセージを提供すること" name="Invoke-DatabaseInitialization テスト.エラーハンドリング.意味のあるエラーメッセージを提供すること" time="0.0172" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Invoke-DatabaseInitialization テスト.パフォーマンス最適化" executed="True" result="Success" success="True" time="0.4212" asserts="0" description="Invoke-DatabaseInitialization テスト.パフォーマンス最適化">
                <results>
                  <test-case description="should generate efficient table creation order" name="Invoke-DatabaseInitialization テスト.パフォーマンス最適化.should generate efficient table creation order" time="0.0232" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="should batch SQL operations for performance" name="Invoke-DatabaseInitialization テスト.パフォーマンス最適化.should batch SQL operations for performance" time="0.0177" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="should handle large schema initialization efficiently" name="Invoke-DatabaseInitialization テスト.パフォーマンス最適化.should handle large schema initialization efficiently" time="0.0408" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Invoke-DatabaseInitialization テスト.設定統合" executed="True" result="Success" success="True" time="0.5066" asserts="0" description="Invoke-DatabaseInitialization テスト.設定統合">
                <results>
                  <test-case description="should read table configuration from config file" name="Invoke-DatabaseInitialization テスト.設定統合.should read table configuration from config file" time="0.0409" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="should validate configuration schema version" name="Invoke-DatabaseInitialization テスト.設定統合.should validate configuration schema version" time="0.0155" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="should handle configuration updates gracefully" name="Invoke-DatabaseInitialization テスト.設定統合.should handle configuration updates gracefully" time="0.0103" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="データベース初期化統合テスト" executed="True" result="Success" success="True" time="0.5761" asserts="0" description="データベース初期化統合テスト">
            <results>
              <test-suite type="TestFixture" name="データベース初期化統合テスト.完全データベースセットアップ" executed="True" result="Success" success="True" time="0.0471" asserts="0" description="データベース初期化統合テスト.完全データベースセットアップ">
                <results>
                  <test-case description="should initialize complete database schema" name="データベース初期化統合テスト.完全データベースセットアップ.should initialize complete database schema" time="0.0118" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="should handle database migration scenarios" name="データベース初期化統合テスト.完全データベースセットアップ.should handle database migration scenarios" time="0.0146" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="should verify database integrity after initialization" name="データベース初期化統合テスト.完全データベースセットアップ.should verify database integrity after initialization" time="0.0088" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="/workspaces/ps-sqlite/tests/Process/Invoke-DataSync.Tests.ps1" executed="True" result="Success" success="True" time="1.1195" asserts="0" description="/workspaces/ps-sqlite/tests/Process/Invoke-DataSync.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Invoke-DataSync Tests" executed="True" result="Success" success="True" time="0.9477" asserts="0" description="Invoke-DataSync Tests">
            <results>
              <test-suite type="TestFixture" name="Invoke-DataSync Tests.Data Comparison Logic" executed="True" result="Success" success="True" time="0.0668" asserts="0" description="Invoke-DataSync Tests.Data Comparison Logic">
                <results>
                  <test-case description="should identify records to ADD (new in provided data)" name="Invoke-DataSync Tests.Data Comparison Logic.should identify records to ADD (new in provided data)" time="0.0237" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="should identify records to DELETE (only in current data)" name="Invoke-DataSync Tests.Data Comparison Logic.should identify records to DELETE (only in current data)" time="0.0127" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="should identify records to KEEP/UPDATE (common records)" name="Invoke-DataSync Tests.Data Comparison Logic.should identify records to KEEP/UPDATE (common records)" time="0.0164" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Invoke-DataSync Tests.Data Synchronization Process" executed="True" result="Success" success="True" time="0.1274" asserts="0" description="Invoke-DataSync Tests.Data Synchronization Process">
                <results>
                  <test-case description="should handle empty provided data gracefully" name="Invoke-DataSync Tests.Data Synchronization Process.should handle empty provided data gracefully" time="0.015" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="should handle empty current data gracefully" name="Invoke-DataSync Tests.Data Synchronization Process.should handle empty current data gracefully" time="0.0107" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="should detect data changes requiring UPDATE" name="Invoke-DataSync Tests.Data Synchronization Process.should detect data changes requiring UPDATE" time="0.0093" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="should preserve unchanged records as KEEP" name="Invoke-DataSync Tests.Data Synchronization Process.should preserve unchanged records as KEEP" time="0.0132" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Invoke-DataSync Tests.Column Mapping" executed="True" result="Success" success="True" time="0.1645" asserts="0" description="Invoke-DataSync Tests.Column Mapping">
                <results>
                  <test-case description="should correctly map employee_id to user_id" name="Invoke-DataSync Tests.Column Mapping.should correctly map employee_id to user_id" time="0.0127" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="should handle missing columns gracefully" name="Invoke-DataSync Tests.Column Mapping.should handle missing columns gracefully" time="0.0116" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Invoke-DataSync Tests.Sync Statistics Generation" executed="True" result="Success" success="True" time="0.3311" asserts="0" description="Invoke-DataSync Tests.Sync Statistics Generation">
                <results>
                  <test-case description="should generate accurate sync statistics" name="Invoke-DataSync Tests.Sync Statistics Generation.should generate accurate sync statistics" time="0.0326" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="should track processing time accurately" name="Invoke-DataSync Tests.Sync Statistics Generation.should track processing time accurately" time="0.1208" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Invoke-DataSync Tests.Error Handling" executed="True" result="Success" success="True" time="0.3972" asserts="0" description="Invoke-DataSync Tests.Error Handling">
                <results>
                  <test-case description="should handle database connection errors" name="Invoke-DataSync Tests.Error Handling.should handle database connection errors" time="0.0173" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="should handle malformed data gracefully" name="Invoke-DataSync Tests.Error Handling.should handle malformed data gracefully" time="0.0175" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="should validate required fields" name="Invoke-DataSync Tests.Error Handling.should validate required fields" time="0.0162" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Invoke-DataSync Tests.Large Dataset Handling" executed="True" result="Success" success="True" time="0.8859" asserts="0" description="Invoke-DataSync Tests.Large Dataset Handling">
                <results>
                  <test-case description="should process large datasets efficiently" name="Invoke-DataSync Tests.Large Dataset Handling.should process large datasets efficiently" time="0.4741" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Invoke-DataSync Tests.Data Integrity Validation" executed="True" result="Success" success="True" time="0.9343" asserts="0" description="Invoke-DataSync Tests.Data Integrity Validation">
                <results>
                  <test-case description="should validate data consistency after sync" name="Invoke-DataSync Tests.Data Integrity Validation.should validate data consistency after sync" time="0.0181" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="should detect duplicate records" name="Invoke-DataSync Tests.Data Integrity Validation.should detect duplicate records" time="0.0179" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Data Sync Integration Tests" executed="True" result="Success" success="True" time="0.9984" asserts="0" description="Data Sync Integration Tests">
            <results>
              <test-suite type="TestFixture" name="Data Sync Integration Tests.End-to-End Synchronization" executed="True" result="Success" success="True" time="0.0388" asserts="0" description="Data Sync Integration Tests.End-to-End Synchronization">
                <results>
                  <test-case description="should perform complete sync workflow" name="Data Sync Integration Tests.End-to-End Synchronization.should perform complete sync workflow" time="0.0264" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="/workspaces/ps-sqlite/tests/Process/Show-SyncResult.Tests.ps1" executed="True" result="Failure" success="False" time="1.2934" asserts="0" description="/workspaces/ps-sqlite/tests/Process/Show-SyncResult.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Show-SyncResult" executed="True" result="Failure" success="False" time="0.3506" asserts="0" description="Show-SyncResult">
            <results>
              <test-suite type="TestFixture" name="Show-SyncResult.正常な結果表示" executed="True" result="Failure" success="False" time="0.1185" asserts="0" description="Show-SyncResult.正常な結果表示">
                <results>
                  <test-case description="同期結果を正しく表示する" name="Show-SyncResult.正常な結果表示.同期結果を正しく表示する" time="0.0239" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>RuntimeException: Unable to find type [ErrorCategory].</message>
                      <stack-trace>at Show-SyncResult, /workspaces/ps-sqlite/scripts/modules/Process/Show-SyncResult.psm1:17
at &lt;ScriptBlock&gt;, /workspaces/ps-sqlite/tests/Process/Show-SyncResult.Tests.ps1:88</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="テーブル件数を表示する" name="Show-SyncResult.正常な結果表示.テーブル件数を表示する" time="0.0128" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>RuntimeException: Unable to find type [ErrorCategory].</message>
                      <stack-trace>at Show-SyncResult, /workspaces/ps-sqlite/scripts/modules/Process/Show-SyncResult.psm1:17
at &lt;ScriptBlock&gt;, /workspaces/ps-sqlite/tests/Process/Show-SyncResult.Tests.ps1:96</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="同期結果を表示する" name="Show-SyncResult.正常な結果表示.同期結果を表示する" time="0.0127" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>RuntimeException: Unable to find type [ErrorCategory].</message>
                      <stack-trace>at Show-SyncResult, /workspaces/ps-sqlite/scripts/modules/Process/Show-SyncResult.psm1:17
at &lt;ScriptBlock&gt;, /workspaces/ps-sqlite/tests/Process/Show-SyncResult.Tests.ps1:104</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="同期処理総件数を表示する" name="Show-SyncResult.正常な結果表示.同期処理総件数を表示する" time="0.0158" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>RuntimeException: Unable to find type [ErrorCategory].</message>
                      <stack-trace>at Show-SyncResult, /workspaces/ps-sqlite/scripts/modules/Process/Show-SyncResult.psm1:17
at &lt;ScriptBlock&gt;, /workspaces/ps-sqlite/tests/Process/Show-SyncResult.Tests.ps1:113</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="適切にログ出力を行う" name="Show-SyncResult.正常な結果表示.適切にログ出力を行う" time="0.0158" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>RuntimeException: Unable to find type [ErrorCategory].</message>
                      <stack-trace>at Show-SyncResult, /workspaces/ps-sqlite/scripts/modules/Process/Show-SyncResult.psm1:17
at &lt;ScriptBlock&gt;, /workspaces/ps-sqlite/tests/Process/Show-SyncResult.Tests.ps1:119</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Show-SyncResult.エラーハンドリング" executed="True" result="Failure" success="False" time="0.1554" asserts="0" description="Show-SyncResult.エラーハンドリング">
                <results>
                  <test-case description="データベース接続エラー時に適切に処理する" name="Show-SyncResult.エラーハンドリング.データベース接続エラー時に適切に処理する" time="0.0267" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>RuntimeException: Unable to find type [ErrorCategory].
PSInvalidCastException: Cannot convert value "PesterMock_Show-SyncResult_Invoke-WithErrorHandling_f0d5b0d1-e926-444e-ba43-62db84c18d5c" to type "System.Management.Automation.CommandMetadata". Error: "Unable to find type [ErrorCategory]."
RuntimeException: Cannot convert value "PesterMock_Show-SyncResult_Invoke-WithErrorHandling_f0d5b0d1-e926-444e-ba43-62db84c18d5c" to type "System.Management.Automation.CommandMetadata". Error: "Unable to find type [ErrorCategory]."</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="/workspaces/ps-sqlite/tests/Utils/Foundation/CoreUtils.Tests.ps1" executed="True" result="Success" success="True" time="1.3682" asserts="0" description="/workspaces/ps-sqlite/tests/Utils/Foundation/CoreUtils.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="CoreUtils (基盤層) テスト" executed="True" result="Success" success="True" time="1.2605" asserts="0" description="CoreUtils (基盤層) テスト">
            <results>
              <test-suite type="TestFixture" name="CoreUtils (基盤層) テスト.レイヤーアーキテクチャ検証" executed="True" result="Success" success="True" time="0.0438" asserts="0" description="CoreUtils (基盤層) テスト.レイヤーアーキテクチャ検証">
                <results>
                  <test-case description="Layer 1 で依存関係がないこと" name="CoreUtils (基盤層) テスト.レイヤーアーキテクチャ検証.Layer 1 で依存関係がないこと" time="0.013" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="設定に依存しないこと" name="CoreUtils (基盤層) テスト.レイヤーアーキテクチャ検証.設定に依存しないこと" time="0.0216" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="CoreUtils (基盤層) テスト.Get-Sqlite3Path 関数" executed="True" result="Success" success="True" time="0.2691" asserts="0" description="CoreUtils (基盤層) テスト.Get-Sqlite3Path 関数">
                <results>
                  <test-case description="SQLite3コマンドパスを返すこと" name="CoreUtils (基盤層) テスト.Get-Sqlite3Path 関数.SQLite3コマンドパスを返すこと" time="0.0183" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="sqlite3が利用できない場合にエラーをスローすること" name="CoreUtils (基盤層) テスト.Get-Sqlite3Path 関数.sqlite3が利用できない場合にエラーをスローすること" time="0.1616" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="コマンド解決エラーを適切に処理すること" name="CoreUtils (基盤層) テスト.Get-Sqlite3Path 関数.コマンド解決エラーを適切に処理すること" time="0.0359" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="CoreUtils (基盤層) テスト.Get-CrossPlatformEncoding 関数" executed="True" result="Success" success="True" time="0.3242" asserts="0" description="CoreUtils (基盤層) テスト.Get-CrossPlatformEncoding 関数">
                <results>
                  <test-case description="PowerShell Core (version 6+) でUTF8エンコーディングを返すこと" name="CoreUtils (基盤層) テスト.Get-CrossPlatformEncoding 関数.PowerShell Core (version 6+) でUTF8エンコーディングを返すこと" time="0.0078" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Windows PowerShell (version &lt; 6) でBOM付きUTF8エンコーディングを返すこと" name="CoreUtils (基盤層) テスト.Get-CrossPlatformEncoding 関数.Windows PowerShell (version &lt; 6) でBOM付きUTF8エンコーディングを返すこと" time="0.0094" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="常に有効なエンコーディングオブジェクトを返すこと" name="CoreUtils (基盤層) テスト.Get-CrossPlatformEncoding 関数.常に有効なエンコーディングオブジェクトを返すこと" time="0.0284" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="CoreUtils (基盤層) テスト.Get-Timestamp 関数" executed="True" result="Success" success="True" time="0.4014" asserts="0" description="CoreUtils (基盤層) テスト.Get-Timestamp 関数">
                <results>
                  <test-case description="デフォルトフォーマットでタイムスタンプを返すこと" name="CoreUtils (基盤層) テスト.Get-Timestamp 関数.デフォルトフォーマットでタイムスタンプを返すこと" time="0.0107" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="カスタムフォーマットパラメータを受け入れること" name="CoreUtils (基盤層) テスト.Get-Timestamp 関数.カスタムフォーマットパラメータを受け入れること" time="0.0069" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Asia/Tokyoタイムゾーンを正しく処理すること" name="CoreUtils (基盤層) テスト.Get-Timestamp 関数.Asia/Tokyoタイムゾーンを正しく処理すること" time="0.0068" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="タイムゾーンに失敗した場合にUTC+9フォールバックを使用すること" name="CoreUtils (基盤層) テスト.Get-Timestamp 関数.タイムゾーンに失敗した場合にUTC+9フォールバックを使用すること" time="0.012" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="異なるタイムゾーン値を処理すること" name="CoreUtils (基盤層) テスト.Get-Timestamp 関数.異なるタイムゾーン値を処理すること" time="0.009" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="カスタムフォーマット文字列を正しく処理すること" name="CoreUtils (基盤層) テスト.Get-Timestamp 関数.カスタムフォーマット文字列を正しく処理すること" time="0.0224" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="CoreUtils (基盤層) テスト.基盤層関数統合" executed="True" result="Success" success="True" time="0.4522" asserts="0" description="CoreUtils (基盤層) テスト.基盤層関数統合">
                <results>
                  <test-case description="設定依存なしで連携動作すること" name="CoreUtils (基盤層) テスト.基盤層関数統合.設定依存なしで連携動作すること" time="0.0233" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="上位層から呼び出し可能であること" name="CoreUtils (基盤層) テスト.基盤層関数統合.上位層から呼び出し可能であること" time="0.0185" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="CoreUtils (基盤層) テスト.エラーハンドリングとエッジケース" executed="True" result="Success" success="True" time="1.0695" asserts="0" description="CoreUtils (基盤層) テスト.エラーハンドリングとエッジケース">
                <results>
                  <test-case description="nullまたは空のパラメータを適切に処理すること" name="CoreUtils (基盤層) テスト.エラーハンドリングとエッジケース.nullまたは空のパラメータを適切に処理すること" time="0.0075" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="複数回の呼び出しで一貫した動作を維持すること" name="CoreUtils (基盤層) テスト.エラーハンドリングとエッジケース.複数回の呼び出しで一貫した動作を維持すること" time="0.0314" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="並行アクセスを安全に処理すること" name="CoreUtils (基盤層) テスト.エラーハンドリングとエッジケース.並行アクセスを安全に処理すること" time="0.5652" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="CoreUtils (基盤層) テスト.パフォーマンスとリソース使用量" executed="True" result="Success" success="True" time="1.2482" asserts="0" description="CoreUtils (基盤層) テスト.パフォーマンスとリソース使用量">
                <results>
                  <test-case description="関数を高速で実行すること" name="CoreUtils (基盤層) テスト.パフォーマンスとリソース使用量.関数を高速で実行すること" time="0.0172" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="繰り返し呼び出しでメモリリークしないこと" name="CoreUtils (基盤層) テスト.パフォーマンスとリソース使用量.繰り返し呼び出しでメモリリークしないこと" time="0.152" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="/workspaces/ps-sqlite/tests/Utils/Infrastructure/ConfigurationUtils.Tests.ps1" executed="True" result="Failure" success="False" time="3.2702" asserts="0" description="/workspaces/ps-sqlite/tests/Utils/Infrastructure/ConfigurationUtils.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="ConfigurationUtils (インフラストラクチャ層) テスト" executed="True" result="Failure" success="False" time="2.8339" asserts="0" description="ConfigurationUtils (インフラストラクチャ層) テスト">
            <results>
              <test-suite type="TestFixture" name="ConfigurationUtils (インフラストラクチャ層) テスト.Layer Architecture Validation" executed="True" result="Failure" success="False" time="0.0493" asserts="0" description="ConfigurationUtils (インフラストラクチャ層) テスト.Layer Architecture Validation">
                <results>
                  <test-case description="should be Layer 2 with Foundation dependencies only" name="ConfigurationUtils (インフラストラクチャ層) テスト.Layer Architecture Validation.should be Layer 2 with Foundation dependencies only" time="0.0158" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="should use Foundation layer functions" name="ConfigurationUtils (インフラストラクチャ層) テスト.Layer Architecture Validation.should use Foundation layer functions" time="0.0232" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>RuntimeException: Should -Invoke: Could not find Mock for command Get-CrossPlatformEncoding in module ConfigurationUtils. Was the mock defined? Did you use the same -ModuleName as on the Mock? When using InModuleScope are InModuleScope, Mock and Should -Invoke using the same -ModuleName?</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="ConfigurationUtils (インフラストラクチャ層) テスト.Get-DataSyncConfig Function - Configuration Loading" executed="True" result="Failure" success="False" time="0.1415" asserts="0" description="ConfigurationUtils (インフラストラクチャ層) テスト.Get-DataSyncConfig Function - Configuration Loading">
                <results>
                  <test-case description="should load configuration from specified path" name="ConfigurationUtils (インフラストラクチャ層) テスト.Get-DataSyncConfig Function - Configuration Loading.should load configuration from specified path" time="0.0099" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="should cache configuration after first load" name="ConfigurationUtils (インフラストラクチャ層) テスト.Get-DataSyncConfig Function - Configuration Loading.should cache configuration after first load" time="0.0125" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="should force reload with -Force parameter" name="ConfigurationUtils (インフラストラクチャ層) テスト.Get-DataSyncConfig Function - Configuration Loading.should force reload with -Force parameter" time="0.0258" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 10
Actual length:   3
Strings differ at index 0.
Expected: 'Asia/Tokyo'
But was:  'UTC'
           ^</message>
                      <stack-trace>at $config1.file_paths.timezone | Should -Be "Asia/Tokyo"  # 元の値, /workspaces/ps-sqlite/tests/Utils/Infrastructure/ConfigurationUtils.Tests.ps1:80
at &lt;ScriptBlock&gt;, /workspaces/ps-sqlite/tests/Utils/Infrastructure/ConfigurationUtils.Tests.ps1:80</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="should throw error when configuration file not found" name="ConfigurationUtils (インフラストラクチャ層) テスト.Get-DataSyncConfig Function - Configuration Loading.should throw error when configuration file not found" time="0.0201" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected an exception with message like '*設定ファイルが見つかりません*' to be thrown, but no exception was thrown.</message>
                      <stack-trace>at { Get-DataSyncConfig -ConfigPath $nonExistentPath } | Should -Throw "*設定ファイルが見つかりません*", /workspaces/ps-sqlite/tests/Utils/Infrastructure/ConfigurationUtils.Tests.ps1:86
at &lt;ScriptBlock&gt;, /workspaces/ps-sqlite/tests/Utils/Infrastructure/ConfigurationUtils.Tests.ps1:86</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="should throw error when called without ConfigPath if not cached" name="ConfigurationUtils (インフラストラクチャ層) テスト.Get-DataSyncConfig Function - Configuration Loading.should throw error when called without ConfigPath if not cached" time="0.0138" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected an exception with message like '*設定がまだ読み込まれていません*' to be thrown, but no exception was thrown.</message>
                      <stack-trace>at { Get-DataSyncConfig } | Should -Throw "*設定がまだ読み込まれていません*", /workspaces/ps-sqlite/tests/Utils/Infrastructure/ConfigurationUtils.Tests.ps1:93
at &lt;ScriptBlock&gt;, /workspaces/ps-sqlite/tests/Utils/Infrastructure/ConfigurationUtils.Tests.ps1:93</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="ConfigurationUtils (インフラストラクチャ層) テスト.Configuration File Structure Validation" executed="True" result="Failure" success="False" time="0.2161" asserts="0" description="ConfigurationUtils (インフラストラクチャ層) テスト.Configuration File Structure Validation">
                <results>
                  <test-case description="should validate required file_paths section" name="ConfigurationUtils (インフラストラクチャ層) テスト.Configuration File Structure Validation.should validate required file_paths section" time="0.0145" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="should validate required tables section" name="ConfigurationUtils (インフラストラクチャ層) テスト.Configuration File Structure Validation.should validate required tables section" time="0.0182" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="should validate sync_config section" name="ConfigurationUtils (インフラストラクチャ層) テスト.Configuration File Structure Validation.should validate sync_config section" time="0.0221" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected the value to have type [array] or any of its subtypes, but got 'employee_id' with type [string].</message>
                      <stack-trace>at $config.sync_config.key_columns | Should -BeOfType [Array], /workspaces/ps-sqlite/tests/Utils/Infrastructure/ConfigurationUtils.Tests.ps1:128
at &lt;ScriptBlock&gt;, /workspaces/ps-sqlite/tests/Utils/Infrastructure/ConfigurationUtils.Tests.ps1:128</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="should handle timezone configuration" name="ConfigurationUtils (インフラストラクチャ層) テスト.Configuration File Structure Validation.should handle timezone configuration" time="0.01" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="ConfigurationUtils (インフラストラクチャ層) テスト.Real Configuration File Integration" executed="True" result="Success" success="True" time="0.2608" asserts="0" description="ConfigurationUtils (インフラストラクチャ層) テスト.Real Configuration File Integration">
                <results>
                  <test-case description="should load the actual project configuration file" name="ConfigurationUtils (インフラストラクチャ層) テスト.Real Configuration File Integration.should load the actual project configuration file" time="0.0193" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="should validate real configuration has required employee data structure" name="ConfigurationUtils (インフラストラクチャ層) テスト.Real Configuration File Integration.should validate real configuration has required employee data structure" time="0.0163" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="ConfigurationUtils (インフラストラクチャ層) テスト.Configuration Error Handling" executed="True" result="Failure" success="False" time="0.3414" asserts="0" description="ConfigurationUtils (インフラストラクチャ層) テスト.Configuration Error Handling">
                <results>
                  <test-case description="should handle malformed JSON gracefully" name="ConfigurationUtils (インフラストラクチャ層) テスト.Configuration Error Handling.should handle malformed JSON gracefully" time="0.0181" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected an exception to be thrown, but no exception was thrown.</message>
                      <stack-trace>at { Get-DataSyncConfig -ConfigPath $malformedConfigPath } | Should -Throw, /workspaces/ps-sqlite/tests/Utils/Infrastructure/ConfigurationUtils.Tests.ps1:178
at &lt;ScriptBlock&gt;, /workspaces/ps-sqlite/tests/Utils/Infrastructure/ConfigurationUtils.Tests.ps1:178</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="should handle empty configuration file" name="ConfigurationUtils (インフラストラクチャ層) テスト.Configuration Error Handling.should handle empty configuration file" time="0.0263" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.</message>
                      <stack-trace>at $config | Should -Not -BeNullOrEmpty, /workspaces/ps-sqlite/tests/Utils/Infrastructure/ConfigurationUtils.Tests.ps1:186
at &lt;ScriptBlock&gt;, /workspaces/ps-sqlite/tests/Utils/Infrastructure/ConfigurationUtils.Tests.ps1:186</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="should handle permission denied errors" name="ConfigurationUtils (インフラストラクチャ層) テスト.Configuration Error Handling.should handle permission denied errors" time="0.0265" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="ConfigurationUtils (インフラストラクチャ層) テスト.Configuration Caching Behavior" executed="True" result="Failure" success="False" time="2.7497" asserts="0" description="ConfigurationUtils (インフラストラクチャ層) テスト.Configuration Caching Behavior">
                <results>
                  <test-case description="should maintain cache across multiple function calls" name="ConfigurationUtils (インフラストラクチャ層) テスト.Configuration Caching Behavior.should maintain cache across multiple function calls" time="0.01" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="should handle concurrent access to cached configuration" name="ConfigurationUtils (インフラストラクチャ層) テスト.Configuration Caching Behavior.should handle concurrent access to cached configuration" time="2.3846" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected $null to not be found in collection @($null, $null, $null, $null, $null), but it was found.</message>
                      <stack-trace>at $results | Should -Not -Contain $null, /workspaces/ps-sqlite/tests/Utils/Infrastructure/ConfigurationUtils.Tests.ps1:254
at &lt;ScriptBlock&gt;, /workspaces/ps-sqlite/tests/Utils/Infrastructure/ConfigurationUtils.Tests.ps1:254</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="ConfigurationUtils (インフラストラクチャ層) テスト.UTF-8 Encoding Support" executed="True" result="Success" success="True" time="2.7966" asserts="0" description="ConfigurationUtils (インフラストラクチャ層) テスト.UTF-8 Encoding Support">
                <results>
                  <test-case description="should handle UTF-8 encoded configuration files" name="ConfigurationUtils (インフラストラクチャ層) テスト.UTF-8 Encoding Support.should handle UTF-8 encoded configuration files" time="0.0162" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="should handle BOM in UTF-8 files" name="ConfigurationUtils (インフラストラクチャ層) テスト.UTF-8 Encoding Support.should handle BOM in UTF-8 files" time="0.0188" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="ConfigurationUtils (インフラストラクチャ層) テスト.Configuration Validation and Defaults" executed="True" result="Success" success="True" time="2.8224" asserts="0" description="ConfigurationUtils (インフラストラクチャ層) テスト.Configuration Validation and Defaults">
                <results>
                  <test-case description="should provide reasonable defaults for missing optional fields" name="ConfigurationUtils (インフラストラクチャ層) テスト.Configuration Validation and Defaults.should provide reasonable defaults for missing optional fields" time="0.0143" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="/workspaces/ps-sqlite/tests/Utils/Infrastructure/ErrorHandlingUtils.Tests.ps1" executed="True" result="Failure" success="False" time="17.4366" asserts="0" description="/workspaces/ps-sqlite/tests/Utils/Infrastructure/ErrorHandlingUtils.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="ErrorHandlingUtils (インフラストラクチャ層) テスト" executed="True" result="Failure" success="False" time="17.0085" asserts="0" description="ErrorHandlingUtils (インフラストラクチャ層) テスト">
            <results>
              <test-suite type="TestFixture" name="ErrorHandlingUtils (インフラストラクチャ層) テスト.レイヤーアーキテクチャ検証" executed="True" result="Success" success="True" time="0.0201" asserts="0" description="ErrorHandlingUtils (インフラストラクチャ層) テスト.レイヤーアーキテクチャ検証">
                <results>
                  <test-case description="Foundation層のみに依存するLayer 2であること" name="ErrorHandlingUtils (インフラストラクチャ層) テスト.レイヤーアーキテクチャ検証.Foundation層のみに依存するLayer 2であること" time="0.0108" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="ErrorHandlingUtils (インフラストラクチャ層) テスト.Invoke-WithErrorHandling関数 - 基本操作" executed="True" result="Failure" success="False" time="0.1232" asserts="0" description="ErrorHandlingUtils (インフラストラクチャ層) テスト.Invoke-WithErrorHandling関数 - 基本操作">
                <results>
                  <test-case description="成功するスクリプトブロックを実行すること" name="ErrorHandlingUtils (インフラストラクチャ層) テスト.Invoke-WithErrorHandling関数 - 基本操作.成功するスクリプトブロックを実行すること" time="0.0175" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="例外を処理して再スローすること" name="ErrorHandlingUtils (インフラストラクチャ層) テスト.Invoke-WithErrorHandling関数 - 基本操作.例外を処理して再スローすること" time="0.0209" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="エラー時にクリーンアップスクリプトを実行すること" name="ErrorHandlingUtils (インフラストラクチャ層) テスト.Invoke-WithErrorHandling関数 - 基本操作.エラー時にクリーンアップスクリプトを実行すること" time="0.0365" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected $true, but got $false.</message>
                      <stack-trace>at $cleanupExecuted | Should -Be $true, /workspaces/ps-sqlite/tests/Utils/Infrastructure/ErrorHandlingUtils.Tests.ps1:60
at &lt;ScriptBlock&gt;, /workspaces/ps-sqlite/tests/Utils/Infrastructure/ErrorHandlingUtils.Tests.ps1:60</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="成功時にクリーンアップスクリプトを実行すること" name="ErrorHandlingUtils (インフラストラクチャ層) テスト.Invoke-WithErrorHandling関数 - 基本操作.成功時にクリーンアップスクリプトを実行すること" time="0.0179" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected $true, but got $false.</message>
                      <stack-trace>at $cleanupExecuted | Should -Be $true, /workspaces/ps-sqlite/tests/Utils/Infrastructure/ErrorHandlingUtils.Tests.ps1:72
at &lt;ScriptBlock&gt;, /workspaces/ps-sqlite/tests/Utils/Infrastructure/ErrorHandlingUtils.Tests.ps1:72</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="ErrorHandlingUtils (インフラストラクチャ層) テスト.エラーカテゴリと分類" executed="True" result="Failure" success="False" time="3.2333" asserts="0" description="ErrorHandlingUtils (インフラストラクチャ層) テスト.エラーカテゴリと分類">
                <results>
                  <test-case description="Systemカテゴリエラーを処理すること" name="ErrorHandlingUtils (インフラストラクチャ層) テスト.エラーカテゴリと分類.Systemカテゴリエラーを処理すること" time="0.0142" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Dataカテゴリエラーを処理すること" name="ErrorHandlingUtils (インフラストラクチャ層) テスト.エラーカテゴリと分類.Dataカテゴリエラーを処理すること" time="0.0206" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected an exception with message like 'Invalid data format' to be thrown, but no exception was thrown.</message>
                      <stack-trace>at } | Should -Throw "Invalid data format", /workspaces/ps-sqlite/tests/Utils/Infrastructure/ErrorHandlingUtils.Tests.ps1:90
at &lt;ScriptBlock&gt;, /workspaces/ps-sqlite/tests/Utils/Infrastructure/ErrorHandlingUtils.Tests.ps1:86</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="Externalカテゴリエラーを処理すること" name="ErrorHandlingUtils (インフラストラクチャ層) テスト.エラーカテゴリと分類.Externalカテゴリエラーを処理すること" time="3.043" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="指定されない場合はSystemカテゴリをデフォルトとすること" name="ErrorHandlingUtils (インフラストラクチャ層) テスト.エラーカテゴリと分類.指定されない場合はSystemカテゴリをデフォルトとすること" time="0.0223" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="ErrorHandlingUtils (インフラストラクチャ層) テスト.コンテキスト情報処理" executed="True" result="Success" success="True" time="3.2578" asserts="0" description="ErrorHandlingUtils (インフラストラクチャ層) テスト.コンテキスト情報処理">
                <results>
                  <test-case description="コンテキストハッシュテーブルを受け入れること" name="ErrorHandlingUtils (インフラストラクチャ層) テスト.コンテキスト情報処理.コンテキストハッシュテーブルを受け入れること" time="0.0048" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="空のコンテキストを処理すること" name="ErrorHandlingUtils (インフラストラクチャ層) テスト.コンテキスト情報処理.空のコンテキストを処理すること" time="0.0073" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="nullコンテキストを処理すること" name="ErrorHandlingUtils (インフラストラクチャ層) テスト.コンテキスト情報処理.nullコンテキストを処理すること" time="0.0043" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="ErrorHandlingUtils (インフラストラクチャ層) テスト.Invoke-FileOperationWithErrorHandling関数" executed="True" result="Success" success="True" time="6.3434" asserts="0" description="ErrorHandlingUtils (インフラストラクチャ層) テスト.Invoke-FileOperationWithErrorHandling関数">
                <results>
                  <test-case description="成功するファイル操作を処理すること" name="ErrorHandlingUtils (インフラストラクチャ層) テスト.Invoke-FileOperationWithErrorHandling関数.成功するファイル操作を処理すること" time="0.0054" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="ファイル未発見エラーを処理すること" name="ErrorHandlingUtils (インフラストラクチャ層) テスト.Invoke-FileOperationWithErrorHandling関数.ファイル未発見エラーを処理すること" time="3.0501" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="ファイル書き込み操作を処理すること" name="ErrorHandlingUtils (インフラストラクチャ層) テスト.Invoke-FileOperationWithErrorHandling関数.ファイル書き込み操作を処理すること" time="0.0067" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="ファイル削除操作を処理すること" name="ErrorHandlingUtils (インフラストラクチャ層) テスト.Invoke-FileOperationWithErrorHandling関数.ファイル削除操作を処理すること" time="0.0112" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="ErrorHandlingUtils (インフラストラクチャ層) テスト.リトライロジックと外部操作" executed="True" result="Success" success="True" time="15.4129" asserts="0" description="ErrorHandlingUtils (インフラストラクチャ層) テスト.リトライロジックと外部操作">
                <results>
                  <test-case description="失敗時に外部操作をリトライすること" name="ErrorHandlingUtils (インフラストラクチャ層) テスト.リトライロジックと外部操作.失敗時に外部操作をリトライすること" time="3.0241" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="タイムアウトシナリオを処理すること" name="ErrorHandlingUtils (インフラストラクチャ層) テスト.リトライロジックと外部操作.タイムアウトシナリオを処理すること" time="6.0358" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="ErrorHandlingUtils (インフラストラクチャ層) テスト.複雑なエラーシナリオ" executed="True" result="Failure" success="False" time="15.9271" asserts="0" description="ErrorHandlingUtils (インフラストラクチャ層) テスト.複雑なエラーシナリオ">
                <results>
                  <test-case description="入れ子のエラーハンドリングを処理すること" name="ErrorHandlingUtils (インフラストラクチャ層) テスト.複雑なエラーシナリオ.入れ子のエラーハンドリングを処理すること" time="0.0127" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="クリーンアップスクリプトエラーを適切に処理すること" name="ErrorHandlingUtils (インフラストラクチャ層) テスト.複雑なエラーシナリオ.クリーンアップスクリプトエラーを適切に処理すること" time="0.0234" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected $true, but got $false.</message>
                      <stack-trace>at $mainOperationExecuted | Should -Be $true, /workspaces/ps-sqlite/tests/Utils/Infrastructure/ErrorHandlingUtils.Tests.ps1:244
at &lt;ScriptBlock&gt;, /workspaces/ps-sqlite/tests/Utils/Infrastructure/ErrorHandlingUtils.Tests.ps1:244</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="異なるPowerShellコンテキストでの例外を処理すること" name="ErrorHandlingUtils (インフラストラクチャ層) テスト.複雑なエラーシナリオ.異なるPowerShellコンテキストでの例外を処理すること" time="0.4701" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected regular expression 'Job context error' to match 'The term 'Invoke-WithErrorHandling' is not recognized as a name of a cmdlet, function, script file, or executable program.
Check the spelling of the name, or if a path was included, verify that the path is correct and try again.', but it did not match.</message>
                      <stack-trace>at $result | Should -Match "Job context error", /workspaces/ps-sqlite/tests/Utils/Infrastructure/ErrorHandlingUtils.Tests.ps1:266
at &lt;ScriptBlock&gt;, /workspaces/ps-sqlite/tests/Utils/Infrastructure/ErrorHandlingUtils.Tests.ps1:266</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="ErrorHandlingUtils (インフラストラクチャ層) テスト.パフォーマンスとリソース管理" executed="True" result="Failure" success="False" time="16.9298" asserts="0" description="ErrorHandlingUtils (インフラストラクチャ層) テスト.パフォーマンスとリソース管理">
                <results>
                  <test-case description="複数の並行エラーハンドリング操作を処理すること" name="ErrorHandlingUtils (インフラストラクチャ層) テスト.パフォーマンスとリソース管理.複数の並行エラーハンドリング操作を処理すること" time="0.7023" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a collection with size 5, but got an empty collection.</message>
                      <stack-trace>at $results | Should -HaveCount 5, /workspaces/ps-sqlite/tests/Utils/Infrastructure/ErrorHandlingUtils.Tests.ps1:287
at &lt;ScriptBlock&gt;, /workspaces/ps-sqlite/tests/Utils/Infrastructure/ErrorHandlingUtils.Tests.ps1:287</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="エラーハンドリング中にリソースリークしないこと" name="ErrorHandlingUtils (インフラストラクチャ層) テスト.パフォーマンスとリソース管理.エラーハンドリング中にリソースリークしないこと" time="0.2913" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="ErrorHandlingUtils (インフラストラクチャ層) テスト.Foundation層との統合" executed="True" result="Success" success="True" time="17.0006" asserts="0" description="ErrorHandlingUtils (インフラストラクチャ層) テスト.Foundation層との統合">
                <results>
                  <test-case description="ログ用にFoundation層ユーティリティを使用すること" name="ErrorHandlingUtils (インフラストラクチャ層) テスト.Foundation層との統合.ログ用にFoundation層ユーティリティを使用すること" time="0.0188" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Foundation層のタイムスタンプ関数と連携すること" name="ErrorHandlingUtils (インフラストラクチャ層) テスト.Foundation層との統合.Foundation層のタイムスタンプ関数と連携すること" time="0.0424" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="/workspaces/ps-sqlite/tests/Utils/Infrastructure/LoggingUtils.Tests.ps1" executed="True" result="Failure" success="False" time="3.0407" asserts="0" description="/workspaces/ps-sqlite/tests/Utils/Infrastructure/LoggingUtils.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="LoggingUtils (インフラストラクチャ層) テスト" executed="True" result="Failure" success="False" time="2.5332" asserts="0" description="LoggingUtils (インフラストラクチャ層) テスト">
            <results>
              <test-suite type="TestFixture" name="LoggingUtils (インフラストラクチャ層) テスト.Layer Architecture Validation" executed="True" result="Success" success="True" time="0.0196" asserts="0" description="LoggingUtils (インフラストラクチャ層) テスト.Layer Architecture Validation">
                <results>
                  <test-case description="基盤層のみに依存するLayer 2であること" name="LoggingUtils (インフラストラクチャ層) テスト.Layer Architecture Validation.基盤層のみに依存するLayer 2であること" time="0.0037" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="基盤層関数を使用すること" name="LoggingUtils (インフラストラクチャ層) テスト.Layer Architecture Validation.基盤層関数を使用すること" time="0.0095" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="LoggingUtils (インフラストラクチャ層) テスト.Write-SystemLog Function - Basic Logging" executed="True" result="Failure" success="False" time="0.126" asserts="0" description="LoggingUtils (インフラストラクチャ層) テスト.Write-SystemLog Function - Basic Logging">
                <results>
                  <test-case description="コンソールにログメッセージを書き込むこと" name="LoggingUtils (インフラストラクチャ層) テスト.Write-SystemLog Function - Basic Logging.コンソールにログメッセージを書き込むこと" time="0.0088" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ParameterBindingException: A parameter cannot be found that matches parameter name 'Component'.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, /workspaces/ps-sqlite/tests/Utils/Infrastructure/LoggingUtils.Tests.ps1:42</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="異なるログレベルを処理すること" name="LoggingUtils (インフラストラクチャ層) テスト.Write-SystemLog Function - Basic Logging.異なるログレベルを処理すること" time="0.0139" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected no exception to be thrown, but an exception "Cannot validate argument on parameter 'Level'. The argument "Debug" does not belong to the set "Info,Warning,Error,Success" specified by the ValidateSet attribute. Supply an argument that is in the set and then try the command again." was thrown from /workspaces/ps-sqlite/tests/Utils/Infrastructure/LoggingUtils.Tests.ps1:52 char:73
    + …  Write-SystemLog -Message "Test $level message" -Level $level } | Sho …
    +                                                          ~~~~~~.</message>
                      <stack-trace>at { Write-SystemLog -Message "Test $level message" -Level $level } | Should -Not -Throw, /workspaces/ps-sqlite/tests/Utils/Infrastructure/LoggingUtils.Tests.ps1:52
at &lt;ScriptBlock&gt;, /workspaces/ps-sqlite/tests/Utils/Infrastructure/LoggingUtils.Tests.ps1:52</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="コンポーネント情報を含むこと" name="LoggingUtils (インフラストラクチャ層) テスト.Write-SystemLog Function - Basic Logging.コンポーネント情報を含むこと" time="0.005" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ParameterBindingException: A parameter cannot be found that matches parameter name 'Component'.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, /workspaces/ps-sqlite/tests/Utils/Infrastructure/LoggingUtils.Tests.ps1:57</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="未指定時にInfoレベルをデフォルトとすること" name="LoggingUtils (インフラストラクチャ層) テスト.Write-SystemLog Function - Basic Logging.未指定時にInfoレベルをデフォルトとすること" time="0.0375" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="ログメッセージで日本語文字を処理すること" name="LoggingUtils (インフラストラクチャ層) テスト.Write-SystemLog Function - Basic Logging.ログメッセージで日本語文字を処理すること" time="0.0337" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="LoggingUtils (インフラストラクチャ層) テスト.Write-SystemLog Function - File Logging" executed="True" result="Failure" success="False" time="0.1679" asserts="0" description="LoggingUtils (インフラストラクチャ層) テスト.Write-SystemLog Function - File Logging">
                <results>
                  <test-case description="LogFilePathが指定された時にファイルにログを書き込むこと" name="LoggingUtils (インフラストラクチャ層) テスト.Write-SystemLog Function - File Logging.LogFilePathが指定された時にファイルにログを書き込むこと" time="0.0076" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ParameterBindingException: A parameter cannot be found that matches parameter name 'LogFilePath'.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, /workspaces/ps-sqlite/tests/Utils/Infrastructure/LoggingUtils.Tests.ps1:77</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="既存のログファイルに追記すること" name="LoggingUtils (インフラストラクチャ層) テスト.Write-SystemLog Function - File Logging.既存のログファイルに追記すること" time="0.0124" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ParameterBindingException: A parameter cannot be found that matches parameter name 'LogFilePath'.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, /workspaces/ps-sqlite/tests/Utils/Infrastructure/LoggingUtils.Tests.ps1:86</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="ログディレクトリが存在しない場合に作成すること" name="LoggingUtils (インフラストラクチャ層) テスト.Write-SystemLog Function - File Logging.ログディレクトリが存在しない場合に作成すること" time="0.0058" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ParameterBindingException: A parameter cannot be found that matches parameter name 'LogFilePath'.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, /workspaces/ps-sqlite/tests/Utils/Infrastructure/LoggingUtils.Tests.ps1:100</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="ログファイルでUTF-8エンコーディングを処理すること" name="LoggingUtils (インフラストラクチャ層) テスト.Write-SystemLog Function - File Logging.ログファイルでUTF-8エンコーディングを処理すること" time="0.0049" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ParameterBindingException: A parameter cannot be found that matches parameter name 'LogFilePath'.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, /workspaces/ps-sqlite/tests/Utils/Infrastructure/LoggingUtils.Tests.ps1:109</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="LoggingUtils (インフラストラクチャ層) テスト.Log Entry Formatting and Structure" executed="True" result="Failure" success="False" time="0.226" asserts="0" description="LoggingUtils (インフラストラクチャ層) テスト.Log Entry Formatting and Structure">
                <results>
                  <test-case description="ログエントリにタイムスタンプを含むこと" name="LoggingUtils (インフラストラクチャ層) テスト.Log Entry Formatting and Structure.ログエントリにタイムスタンプを含むこと" time="0.0109" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ParameterBindingException: A parameter cannot be found that matches parameter name 'LogFilePath'.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, /workspaces/ps-sqlite/tests/Utils/Infrastructure/LoggingUtils.Tests.ps1:119</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="フォーマット済み出力にログレベルを含むこと" name="LoggingUtils (インフラストラクチャ層) テスト.Log Entry Formatting and Structure.フォーマット済み出力にログレベルを含むこと" time="0.007" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ParameterBindingException: A parameter cannot be found that matches parameter name 'LogFilePath'.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, /workspaces/ps-sqlite/tests/Utils/Infrastructure/LoggingUtils.Tests.ps1:126</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="ログエントリを一貫してフォーマットすること" name="LoggingUtils (インフラストラクチャ層) テスト.Log Entry Formatting and Structure.ログエントリを一貫してフォーマットすること" time="0.0156" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ParameterBindingException: A parameter cannot be found that matches parameter name 'LogFilePath'.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, /workspaces/ps-sqlite/tests/Utils/Infrastructure/LoggingUtils.Tests.ps1:140</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="複数行メッセージを処理すること" name="LoggingUtils (インフラストラクチャ層) テスト.Log Entry Formatting and Structure.複数行メッセージを処理すること" time="0.0138" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ParameterBindingException: A parameter cannot be found that matches parameter name 'LogFilePath'.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, /workspaces/ps-sqlite/tests/Utils/Infrastructure/LoggingUtils.Tests.ps1:153</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="LoggingUtils (インフラストラクチャ層) テスト.Initialize-SystemLogging Function" executed="True" result="Failure" success="False" time="0.3078" asserts="0" description="LoggingUtils (インフラストラクチャ層) テスト.Initialize-SystemLogging Function">
                <results>
                  <test-case description="ログ設定を初期化すること" name="LoggingUtils (インフラストラクチャ層) テスト.Initialize-SystemLogging Function.ログ設定を初期化すること" time="0.0273" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected no exception to be thrown, but an exception "The term 'Initialize-SystemLogging' is not recognized as a name of a cmdlet, function, script file, or executable program.
Check the spelling of the name, or if a path was included, verify that the path is correct and try again." was thrown from /workspaces/ps-sqlite/tests/Utils/Infrastructure/LoggingUtils.Tests.ps1:171 char:15
    +             { Initialize-SystemLogging -Configuration $logConfig } |  …
    +               ~~~~~~~~~~~~~~~~~~~~~~~~.</message>
                      <stack-trace>at { Initialize-SystemLogging -Configuration $logConfig } | Should -Not -Throw, /workspaces/ps-sqlite/tests/Utils/Infrastructure/LoggingUtils.Tests.ps1:171
at &lt;ScriptBlock&gt;, /workspaces/ps-sqlite/tests/Utils/Infrastructure/LoggingUtils.Tests.ps1:171</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="初期化時にログファイルを作成すること" name="LoggingUtils (インフラストラクチャ層) テスト.Initialize-SystemLogging Function.初期化時にログファイルを作成すること" time="0.021" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>CommandNotFoundException: The term 'Initialize-SystemLogging' is not recognized as a name of a cmdlet, function, script file, or executable program.
Check the spelling of the name, or if a path was included, verify that the path is correct and try again.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, /workspaces/ps-sqlite/tests/Utils/Infrastructure/LoggingUtils.Tests.ps1:178</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="設定パラメータを検証すること" name="LoggingUtils (インフラストラクチャ層) テスト.Initialize-SystemLogging Function.設定パラメータを検証すること" time="0.0255" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="LoggingUtils (インフラストラクチャ層) テスト.Write-PerformanceLog Function - Performance Logging" executed="True" result="Failure" success="False" time="0.3977" asserts="0" description="LoggingUtils (インフラストラクチャ層) テスト.Write-PerformanceLog Function - Performance Logging">
                <results>
                  <test-case description="パフォーマンス指標をログに記録すること" name="LoggingUtils (インフラストラクチャ層) テスト.Write-PerformanceLog Function - Performance Logging.パフォーマンス指標をログに記録すること" time="0.0292" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected no exception to be thrown, but an exception "The term 'Write-PerformanceLog' is not recognized as a name of a cmdlet, function, script file, or executable program.
Check the spelling of the name, or if a path was included, verify that the path is correct and try again." was thrown from /workspaces/ps-sqlite/tests/Utils/Infrastructure/LoggingUtils.Tests.ps1:202 char:15
    +             { Write-PerformanceLog -Metrics $metrics -LogFilePath $sc …
    +               ~~~~~~~~~~~~~~~~~~~~.</message>
                      <stack-trace>at { Write-PerformanceLog -Metrics $metrics -LogFilePath $script:TestLogPath } | Should -Not -Throw, /workspaces/ps-sqlite/tests/Utils/Infrastructure/LoggingUtils.Tests.ps1:202
at &lt;ScriptBlock&gt;, /workspaces/ps-sqlite/tests/Utils/Infrastructure/LoggingUtils.Tests.ps1:202</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="パフォーマンス統計を計算してログに記録すること" name="LoggingUtils (インフラストラクチャ層) テスト.Write-PerformanceLog Function - Performance Logging.パフォーマンス統計を計算してログに記録すること" time="0.019" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>CommandNotFoundException: The term 'Write-PerformanceLog' is not recognized as a name of a cmdlet, function, script file, or executable program.
Check the spelling of the name, or if a path was included, verify that the path is correct and try again.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, /workspaces/ps-sqlite/tests/Utils/Infrastructure/LoggingUtils.Tests.ps1:220</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="不足しているパフォーマンス指標を適切に処理すること" name="LoggingUtils (インフラストラクチャ層) テスト.Write-PerformanceLog Function - Performance Logging.不足しているパフォーマンス指標を適切に処理すること" time="0.0329" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected no exception to be thrown, but an exception "The term 'Write-PerformanceLog' is not recognized as a name of a cmdlet, function, script file, or executable program.
Check the spelling of the name, or if a path was included, verify that the path is correct and try again." was thrown from /workspaces/ps-sqlite/tests/Utils/Infrastructure/LoggingUtils.Tests.ps1:233 char:15
    +             { Write-PerformanceLog -Metrics $incompleteMetrics -LogFi …
    +               ~~~~~~~~~~~~~~~~~~~~.</message>
                      <stack-trace>at { Write-PerformanceLog -Metrics $incompleteMetrics -LogFilePath $script:TestLogPath } | Should -Not -Throw, /workspaces/ps-sqlite/tests/Utils/Infrastructure/LoggingUtils.Tests.ps1:233
at &lt;ScriptBlock&gt;, /workspaces/ps-sqlite/tests/Utils/Infrastructure/LoggingUtils.Tests.ps1:233</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="LoggingUtils (インフラストラクチャ層) テスト.Write-AuditLog Function - Audit Logging" executed="True" result="Failure" success="False" time="0.4618" asserts="0" description="LoggingUtils (インフラストラクチャ層) テスト.Write-AuditLog Function - Audit Logging">
                <results>
                  <test-case description="監査イベントをログに記録すること" name="LoggingUtils (インフラストラクチャ層) テスト.Write-AuditLog Function - Audit Logging.監査イベントをログに記録すること" time="0.0188" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected no exception to be thrown, but an exception "The term 'Write-AuditLog' is not recognized as a name of a cmdlet, function, script file, or executable program.
Check the spelling of the name, or if a path was included, verify that the path is correct and try again." was thrown from /workspaces/ps-sqlite/tests/Utils/Infrastructure/LoggingUtils.Tests.ps1:247 char:15
    +             { Write-AuditLog -AuditEvent $auditEvent -LogFilePath $sc …
    +               ~~~~~~~~~~~~~~.</message>
                      <stack-trace>at { Write-AuditLog -AuditEvent $auditEvent -LogFilePath $script:TestLogPath } | Should -Not -Throw, /workspaces/ps-sqlite/tests/Utils/Infrastructure/LoggingUtils.Tests.ps1:247
at &lt;ScriptBlock&gt;, /workspaces/ps-sqlite/tests/Utils/Infrastructure/LoggingUtils.Tests.ps1:247</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="セキュリティ関連情報を含むこと" name="LoggingUtils (インフラストラクチャ層) テスト.Write-AuditLog Function - Audit Logging.セキュリティ関連情報を含むこと" time="0.0164" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>CommandNotFoundException: The term 'Write-AuditLog' is not recognized as a name of a cmdlet, function, script file, or executable program.
Check the spelling of the name, or if a path was included, verify that the path is correct and try again.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, /workspaces/ps-sqlite/tests/Utils/Infrastructure/LoggingUtils.Tests.ps1:265</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="日本語文字を含む監査イベントを処理すること" name="LoggingUtils (インフラストラクチャ層) テスト.Write-AuditLog Function - Audit Logging.日本語文字を含む監査イベントを処理すること" time="0.021" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>CommandNotFoundException: The term 'Write-AuditLog' is not recognized as a name of a cmdlet, function, script file, or executable program.
Check the spelling of the name, or if a path was included, verify that the path is correct and try again.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, /workspaces/ps-sqlite/tests/Utils/Infrastructure/LoggingUtils.Tests.ps1:281</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="LoggingUtils (インフラストラクチャ層) テスト.Log Rotation and Maintenance" executed="True" result="Failure" success="False" time="0.5289" asserts="0" description="LoggingUtils (インフラストラクチャ層) テスト.Log Rotation and Maintenance">
                <results>
                  <test-case description="ログファイルローテーションを処理すること" name="LoggingUtils (インフラストラクチャ層) テスト.Log Rotation and Maintenance.ログファイルローテーションを処理すること" time="0.0155" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ParameterBindingException: A parameter cannot be found that matches parameter name 'LogFilePath'.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, /workspaces/ps-sqlite/tests/Utils/Infrastructure/LoggingUtils.Tests.ps1:293
at &lt;ScriptBlock&gt;, /workspaces/ps-sqlite/tests/Utils/Infrastructure/LoggingUtils.Tests.ps1:292</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="ログファイルサイズ制限を維持すること" name="LoggingUtils (インフラストラクチャ層) テスト.Log Rotation and Maintenance.ログファイルサイズ制限を維持すること" time="0.0099" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ParameterBindingException: A parameter cannot be found that matches parameter name 'LogFilePath'.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, /workspaces/ps-sqlite/tests/Utils/Infrastructure/LoggingUtils.Tests.ps1:307
at &lt;ScriptBlock&gt;, /workspaces/ps-sqlite/tests/Utils/Infrastructure/LoggingUtils.Tests.ps1:306</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="古いログファイルをクリーンアップすること" name="LoggingUtils (インフラストラクチャ層) テスト.Log Rotation and Maintenance.古いログファイルをクリーンアップすること" time="0.0329" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="LoggingUtils (インフラストラクチャ層) テスト.Concurrent Logging and Thread Safety" executed="True" result="Failure" success="False" time="2.3947" asserts="0" description="LoggingUtils (インフラストラクチャ層) テスト.Concurrent Logging and Thread Safety">
                <results>
                  <test-case description="並行ログ書き込みを安全に処理すること" name="LoggingUtils (インフラストラクチャ層) テスト.Concurrent Logging and Thread Safety.並行ログ書き込みを安全に処理すること" time="1.2902" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected $true, but got $false.</message>
                      <stack-trace>at Test-Path $script:TestLogPath | Should -Be $true, /workspaces/ps-sqlite/tests/Utils/Infrastructure/LoggingUtils.Tests.ps1:354
at &lt;ScriptBlock&gt;, /workspaces/ps-sqlite/tests/Utils/Infrastructure/LoggingUtils.Tests.ps1:354</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="並行アクセス下でログの整合性を維持すること" name="LoggingUtils (インフラストラクチャ層) テスト.Concurrent Logging and Thread Safety.並行アクセス下でログの整合性を維持すること" time="0.5648" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="LoggingUtils (インフラストラクチャ層) テスト.Integration with Foundation Layer" executed="True" result="Failure" success="False" time="2.4218" asserts="0" description="LoggingUtils (インフラストラクチャ層) テスト.Integration with Foundation Layer">
                <results>
                  <test-case description="基盤層のタイムスタンプ関数を使用すること" name="LoggingUtils (インフラストラクチャ層) テスト.Integration with Foundation Layer.基盤層のタイムスタンプ関数を使用すること" time="0.0083" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ParameterBindingException: A parameter cannot be found that matches parameter name 'LogFilePath'.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, /workspaces/ps-sqlite/tests/Utils/Infrastructure/LoggingUtils.Tests.ps1:390</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="基盤層のエンコーディング関数を使用すること" name="LoggingUtils (インフラストラクチャ層) テスト.Integration with Foundation Layer.基盤層のエンコーディング関数を使用すること" time="0.0118" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ParameterBindingException: A parameter cannot be found that matches parameter name 'LogFilePath'.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, /workspaces/ps-sqlite/tests/Utils/Infrastructure/LoggingUtils.Tests.ps1:400</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="LoggingUtils (インフラストラクチャ層) テスト.Error Handling and Resilience" executed="True" result="Failure" success="False" time="2.4871" asserts="0" description="LoggingUtils (インフラストラクチャ層) テスト.Error Handling and Resilience">
                <results>
                  <test-case description="ファイルアクセスエラーを適切に処理すること" name="LoggingUtils (インフラストラクチャ層) テスト.Error Handling and Resilience.ファイルアクセスエラーを適切に処理すること" time="0.0239" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected no exception to be thrown, but an exception "A parameter cannot be found that matches parameter name 'LogFilePath'." was thrown from /workspaces/ps-sqlite/tests/Utils/Infrastructure/LoggingUtils.Tests.ps1:424 char:61
    + …      { Write-SystemLog -Message "Read-only test" -LogFilePath $readOn …
    +                                                    ~~~~~~~~~~~~.</message>
                      <stack-trace>at { Write-SystemLog -Message "Read-only test" -LogFilePath $readOnlyLogPath } | Should -Not -Throw, /workspaces/ps-sqlite/tests/Utils/Infrastructure/LoggingUtils.Tests.ps1:424
at &lt;ScriptBlock&gt;, /workspaces/ps-sqlite/tests/Utils/Infrastructure/LoggingUtils.Tests.ps1:424</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="ファイルログが失敗した時にコンソールログを継続すること" name="LoggingUtils (インフラストラクチャ層) テスト.Error Handling and Resilience.ファイルログが失敗した時にコンソールログを継続すること" time="0.0081" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ParameterBindingException: A parameter cannot be found that matches parameter name 'LogFilePath'.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, /workspaces/ps-sqlite/tests/Utils/Infrastructure/LoggingUtils.Tests.ps1:439</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="非常に長いログメッセージを処理すること" name="LoggingUtils (インフラストラクチャ層) テスト.Error Handling and Resilience.非常に長いログメッセージを処理すること" time="0.0125" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected no exception to be thrown, but an exception "A parameter cannot be found that matches parameter name 'LogFilePath'." was thrown from /workspaces/ps-sqlite/tests/Utils/Infrastructure/LoggingUtils.Tests.ps1:449 char:53
    + …          { Write-SystemLog -Message $longMessage -LogFilePath $script …
    +                                                    ~~~~~~~~~~~~.</message>
                      <stack-trace>at { Write-SystemLog -Message $longMessage -LogFilePath $script:TestLogPath } | Should -Not -Throw, /workspaces/ps-sqlite/tests/Utils/Infrastructure/LoggingUtils.Tests.ps1:449
at &lt;ScriptBlock&gt;, /workspaces/ps-sqlite/tests/Utils/Infrastructure/LoggingUtils.Tests.ps1:449</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="nullまたは空のメッセージを処理すること" name="LoggingUtils (インフラストラクチャ層) テスト.Error Handling and Resilience.nullまたは空のメッセージを処理すること" time="0.0094" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected no exception to be thrown, but an exception "Cannot bind argument to parameter 'Message' because it is an empty string." was thrown from /workspaces/ps-sqlite/tests/Utils/Infrastructure/LoggingUtils.Tests.ps1:456 char:40
    +             { Write-SystemLog -Message $null -LogFilePath $script:Tes …
    +                                        ~~~~~.</message>
                      <stack-trace>at { Write-SystemLog -Message $null -LogFilePath $script:TestLogPath } | Should -Not -Throw, /workspaces/ps-sqlite/tests/Utils/Infrastructure/LoggingUtils.Tests.ps1:456
at &lt;ScriptBlock&gt;, /workspaces/ps-sqlite/tests/Utils/Infrastructure/LoggingUtils.Tests.ps1:456</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="LoggingUtils (インフラストラクチャ層) テスト.Performance and Resource Management" executed="True" result="Failure" success="False" time="2.5264" asserts="0" description="LoggingUtils (インフラストラクチャ層) テスト.Performance and Resource Management">
                <results>
                  <test-case description="大量ログを効率的に記録すること" name="LoggingUtils (インフラストラクチャ層) テスト.Performance and Resource Management.大量ログを効率的に記録すること" time="0.0075" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ParameterBindingException: A parameter cannot be found that matches parameter name 'LogFilePath'.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, /workspaces/ps-sqlite/tests/Utils/Infrastructure/LoggingUtils.Tests.ps1:468
at &lt;ScriptBlock&gt;, /workspaces/ps-sqlite/tests/Utils/Infrastructure/LoggingUtils.Tests.ps1:467</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="ファイルハンドルをリークしないこと" name="LoggingUtils (インフラストラクチャ層) テスト.Performance and Resource Management.ファイルハンドルをリークしないこと" time="0.013" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ParameterBindingException: A parameter cannot be found that matches parameter name 'LogFilePath'.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, /workspaces/ps-sqlite/tests/Utils/Infrastructure/LoggingUtils.Tests.ps1:480
at &lt;ScriptBlock&gt;, /workspaces/ps-sqlite/tests/Utils/Infrastructure/LoggingUtils.Tests.ps1:479</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="適度なメモリ使用量を維持すること" name="LoggingUtils (インフラストラクチャ層) テスト.Performance and Resource Management.適度なメモリ使用量を維持すること" time="0.0082" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ParameterBindingException: A parameter cannot be found that matches parameter name 'LogFilePath'.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, /workspaces/ps-sqlite/tests/Utils/Infrastructure/LoggingUtils.Tests.ps1:494
at &lt;ScriptBlock&gt;, /workspaces/ps-sqlite/tests/Utils/Infrastructure/LoggingUtils.Tests.ps1:493</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="/workspaces/ps-sqlite/tests/Utils/DataAccess/DatabaseUtils.Tests.ps1" executed="True" result="Failure" success="False" time="1.1138" asserts="0" description="/workspaces/ps-sqlite/tests/Utils/DataAccess/DatabaseUtils.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="DatabaseUtils (データアクセス層) テスト" executed="True" result="Failure" success="False" time="0.6107" asserts="0" description="DatabaseUtils (データアクセス層) テスト">
            <results>
              <test-suite type="TestFixture" name="DatabaseUtils (データアクセス層) テスト.Layer Architecture Validation" executed="True" result="Success" success="True" time="0.0193" asserts="0" description="DatabaseUtils (データアクセス層) テスト.Layer Architecture Validation">
                <results>
                  <test-case description="should be Layer 3 with Foundation and Infrastructure dependencies" name="DatabaseUtils (データアクセス層) テスト.Layer Architecture Validation.should be Layer 3 with Foundation and Infrastructure dependencies" time="0.0082" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="should use lower layer functions" name="DatabaseUtils (データアクセス層) テスト.Layer Architecture Validation.should use lower layer functions" time="0.0039" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="DatabaseUtils (データアクセス層) テスト.Get-TableDefinition Function" executed="True" result="Success" success="True" time="0.0522" asserts="0" description="DatabaseUtils (データアクセス層) テスト.Get-TableDefinition Function">
                <results>
                  <test-case description="should return table definition for valid table name" name="DatabaseUtils (データアクセス層) テスト.Get-TableDefinition Function.should return table definition for valid table name" time="0.0043" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="should handle temporary table names (_temp suffix)" name="DatabaseUtils (データアクセス層) テスト.Get-TableDefinition Function.should handle temporary table names (_temp suffix)" time="0.0045" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="should throw error for unknown table name" name="DatabaseUtils (データアクセス層) テスト.Get-TableDefinition Function.should throw error for unknown table name" time="0.0096" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="should validate table column properties" name="DatabaseUtils (データアクセス層) テスト.Get-TableDefinition Function.should validate table column properties" time="0.0072" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="DatabaseUtils (データアクセス層) テスト.Get-CsvColumns Function" executed="True" result="Failure" success="False" time="0.0928" asserts="0" description="DatabaseUtils (データアクセス層) テスト.Get-CsvColumns Function">
                <results>
                  <test-case description="should return CSV column list for table" name="DatabaseUtils (データアクセス層) テスト.Get-CsvColumns Function.should return CSV column list for table" time="0.0088" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.</message>
                      <stack-trace>at $columns | Should -Not -BeNullOrEmpty, /workspaces/ps-sqlite/tests/Utils/DataAccess/DatabaseUtils.Tests.ps1:80
at &lt;ScriptBlock&gt;, /workspaces/ps-sqlite/tests/Utils/DataAccess/DatabaseUtils.Tests.ps1:80</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="should return columns in correct order" name="DatabaseUtils (データアクセス層) テスト.Get-CsvColumns Function.should return columns in correct order" time="0.0092" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>RuntimeException: Cannot index into a null array.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, /workspaces/ps-sqlite/tests/Utils/DataAccess/DatabaseUtils.Tests.ps1:90</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="should handle tables with different column structures" name="DatabaseUtils (データアクセス層) テスト.Get-CsvColumns Function.should handle tables with different column structures" time="0.0127" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 'employee_id' to be found in collection $null, but it was not found.</message>
                      <stack-trace>at $providedColumns | Should -Contain "employee_id", /workspaces/ps-sqlite/tests/Utils/DataAccess/DatabaseUtils.Tests.ps1:101
at &lt;ScriptBlock&gt;, /workspaces/ps-sqlite/tests/Utils/DataAccess/DatabaseUtils.Tests.ps1:101</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="DatabaseUtils (データアクセス層) テスト.New-CreateTableSQL Function" executed="True" result="Failure" success="False" time="0.1442" asserts="0" description="DatabaseUtils (データアクセス層) テスト.New-CreateTableSQL Function">
                <results>
                  <test-case description="should generate valid CREATE TABLE SQL" name="DatabaseUtils (データアクセス層) テスト.New-CreateTableSQL Function.should generate valid CREATE TABLE SQL" time="0.0145" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>RuntimeException: テーブル定義が見つかりません: test_table (ベーステーブル: test_table)</message>
                      <stack-trace>at Get-TableDefinition, /workspaces/ps-sqlite/scripts/modules/Utils/DataAccess/DatabaseUtils.psm1:22
at New-CreateTableSql, /workspaces/ps-sqlite/scripts/modules/Utils/DataAccess/DatabaseUtils.psm1:105
at &lt;ScriptBlock&gt;, /workspaces/ps-sqlite/tests/Utils/DataAccess/DatabaseUtils.Tests.ps1:112</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="should handle IF NOT EXISTS option" name="DatabaseUtils (データアクセス層) テスト.New-CreateTableSQL Function.should handle IF NOT EXISTS option" time="0.0054" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>ParameterBindingException: A parameter cannot be found that matches parameter name 'IfNotExists'.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, /workspaces/ps-sqlite/tests/Utils/DataAccess/DatabaseUtils.Tests.ps1:121</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="should include all column definitions with proper constraints" name="DatabaseUtils (データアクセス層) テスト.New-CreateTableSQL Function.should include all column definitions with proper constraints" time="0.0122" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected regular expression 'employee_id.*PRIMARY KEY' to match 'CREATE TABLE IF NOT EXISTS provided_data (
    @{nullable=False; type=TEXT} 
);', but it did not match.</message>
                      <stack-trace>at $sql | Should -Match "employee_id.*PRIMARY KEY", /workspaces/ps-sqlite/tests/Utils/DataAccess/DatabaseUtils.Tests.ps1:130
at &lt;ScriptBlock&gt;, /workspaces/ps-sqlite/tests/Utils/DataAccess/DatabaseUtils.Tests.ps1:130</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="should generate different SQL for different tables" name="DatabaseUtils (データアクセス層) テスト.New-CreateTableSQL Function.should generate different SQL for different tables" time="0.0115" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected regular expression 'employee_id.*PRIMARY KEY' to match 'CREATE TABLE IF NOT EXISTS provided_data (
    @{nullable=False; type=TEXT} 
);', but it did not match.</message>
                      <stack-trace>at $sql1 | Should -Match "employee_id.*PRIMARY KEY", /workspaces/ps-sqlite/tests/Utils/DataAccess/DatabaseUtils.Tests.ps1:151
at &lt;ScriptBlock&gt;, /workspaces/ps-sqlite/tests/Utils/DataAccess/DatabaseUtils.Tests.ps1:151</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="DatabaseUtils (データアクセス層) テスト.New-InsertSQL Function" executed="True" result="Failure" success="False" time="0.2133" asserts="0" description="DatabaseUtils (データアクセス層) テスト.New-InsertSQL Function">
                <results>
                  <test-case description="should generate INSERT SQL with placeholders" name="DatabaseUtils (データアクセス層) テスト.New-InsertSQL Function.should generate INSERT SQL with placeholders" time="0.0182" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>CommandNotFoundException: The term 'New-InsertSQL' is not recognized as a name of a cmdlet, function, script file, or executable program.
Check the spelling of the name, or if a path was included, verify that the path is correct and try again.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, /workspaces/ps-sqlite/tests/Utils/DataAccess/DatabaseUtils.Tests.ps1:158</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="should include all table columns" name="DatabaseUtils (データアクセス層) テスト.New-InsertSQL Function.should include all table columns" time="0.0175" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>CommandNotFoundException: The term 'New-InsertSQL' is not recognized as a name of a cmdlet, function, script file, or executable program.
Check the spelling of the name, or if a path was included, verify that the path is correct and try again.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, /workspaces/ps-sqlite/tests/Utils/DataAccess/DatabaseUtils.Tests.ps1:167</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="should generate valid SQL syntax" name="DatabaseUtils (データアクセス層) テスト.New-InsertSQL Function.should generate valid SQL syntax" time="0.0224" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>CommandNotFoundException: The term 'New-InsertSQL' is not recognized as a name of a cmdlet, function, script file, or executable program.
Check the spelling of the name, or if a path was included, verify that the path is correct and try again.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, /workspaces/ps-sqlite/tests/Utils/DataAccess/DatabaseUtils.Tests.ps1:180</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="DatabaseUtils (データアクセス層) テスト.New-UpdateSQL Function" executed="True" result="Failure" success="False" time="0.3102" asserts="0" description="DatabaseUtils (データアクセス層) テスト.New-UpdateSQL Function">
                <results>
                  <test-case description="should generate UPDATE SQL with WHERE clause" name="DatabaseUtils (データアクセス層) テスト.New-UpdateSQL Function.should generate UPDATE SQL with WHERE clause" time="0.025" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>CommandNotFoundException: The term 'New-UpdateSQL' is not recognized as a name of a cmdlet, function, script file, or executable program.
Check the spelling of the name, or if a path was included, verify that the path is correct and try again.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, /workspaces/ps-sqlite/tests/Utils/DataAccess/DatabaseUtils.Tests.ps1:190</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="should set all non-primary key columns" name="DatabaseUtils (データアクセス層) テスト.New-UpdateSQL Function.should set all non-primary key columns" time="0.0288" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>CommandNotFoundException: The term 'New-UpdateSQL' is not recognized as a name of a cmdlet, function, script file, or executable program.
Check the spelling of the name, or if a path was included, verify that the path is correct and try again.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, /workspaces/ps-sqlite/tests/Utils/DataAccess/DatabaseUtils.Tests.ps1:200</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="should handle tables with multiple primary keys" name="DatabaseUtils (データアクセス層) テスト.New-UpdateSQL Function.should handle tables with multiple primary keys" time="0.0314" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>CommandNotFoundException: The term 'New-UpdateSQL' is not recognized as a name of a cmdlet, function, script file, or executable program.
Check the spelling of the name, or if a path was included, verify that the path is correct and try again.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, /workspaces/ps-sqlite/tests/Utils/DataAccess/DatabaseUtils.Tests.ps1:213</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="DatabaseUtils (データアクセス層) テスト.New-SelectSQL Function" executed="True" result="Failure" success="False" time="0.364" asserts="0" description="DatabaseUtils (データアクセス層) テスト.New-SelectSQL Function">
                <results>
                  <test-case description="should generate SELECT SQL for all columns" name="DatabaseUtils (データアクセス層) テスト.New-SelectSQL Function.should generate SELECT SQL for all columns" time="0.0129" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>RuntimeException: テーブル定義が見つかりません: test_table (ベーステーブル: test_table)</message>
                      <stack-trace>at Get-TableDefinition, /workspaces/ps-sqlite/scripts/modules/Utils/DataAccess/DatabaseUtils.psm1:22
at Get-CsvColumns, /workspaces/ps-sqlite/scripts/modules/Utils/DataAccess/DatabaseUtils.psm1:35
at New-SelectSql, /workspaces/ps-sqlite/scripts/modules/Utils/DataAccess/DatabaseUtils.psm1:194
at &lt;ScriptBlock&gt;, /workspaces/ps-sqlite/tests/Utils/DataAccess/DatabaseUtils.Tests.ps1:222</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="should handle specific column selection" name="DatabaseUtils (データアクセス層) テスト.New-SelectSQL Function.should handle specific column selection" time="0.0087" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="should add WHERE clause when provided" name="DatabaseUtils (データアクセス層) テスト.New-SelectSQL Function.should add WHERE clause when provided" time="0.0057" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="should add ORDER BY clause when provided" name="DatabaseUtils (データアクセス層) テスト.New-SelectSQL Function.should add ORDER BY clause when provided" time="0.0082" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="should combine WHERE and ORDER BY clauses" name="DatabaseUtils (データアクセス層) テスト.New-SelectSQL Function.should combine WHERE and ORDER BY clauses" time="0.0097" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="DatabaseUtils (データアクセス層) テスト.New-DeleteSQL Function" executed="True" result="Failure" success="False" time="0.4198" asserts="0" description="DatabaseUtils (データアクセス層) テスト.New-DeleteSQL Function">
                <results>
                  <test-case description="should generate DELETE SQL with WHERE clause" name="DatabaseUtils (データアクセス層) テスト.New-DeleteSQL Function.should generate DELETE SQL with WHERE clause" time="0.014" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>CommandNotFoundException: The term 'New-DeleteSQL' is not recognized as a name of a cmdlet, function, script file, or executable program.
Check the spelling of the name, or if a path was included, verify that the path is correct and try again.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, /workspaces/ps-sqlite/tests/Utils/DataAccess/DatabaseUtils.Tests.ps1:265</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="should use primary key in WHERE clause" name="DatabaseUtils (データアクセス層) テスト.New-DeleteSQL Function.should use primary key in WHERE clause" time="0.0171" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>CommandNotFoundException: The term 'New-DeleteSQL' is not recognized as a name of a cmdlet, function, script file, or executable program.
Check the spelling of the name, or if a path was included, verify that the path is correct and try again.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, /workspaces/ps-sqlite/tests/Utils/DataAccess/DatabaseUtils.Tests.ps1:274</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="should handle custom WHERE clause" name="DatabaseUtils (データアクセス層) テスト.New-DeleteSQL Function.should handle custom WHERE clause" time="0.0151" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>CommandNotFoundException: The term 'New-DeleteSQL' is not recognized as a name of a cmdlet, function, script file, or executable program.
Check the spelling of the name, or if a path was included, verify that the path is correct and try again.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, /workspaces/ps-sqlite/tests/Utils/DataAccess/DatabaseUtils.Tests.ps1:281</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="DatabaseUtils (データアクセス層) テスト.Database Schema Validation" executed="True" result="Failure" success="False" time="0.4525" asserts="0" description="DatabaseUtils (データアクセス層) テスト.Database Schema Validation">
                <results>
                  <test-case description="should validate column types against SQL standards" name="DatabaseUtils (データアクセス層) テスト.Database Schema Validation.should validate column types against SQL standards" time="0.0058" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="should ensure primary key constraints are defined" name="DatabaseUtils (データアクセス層) テスト.Database Schema Validation.should ensure primary key constraints are defined" time="0.0128" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.</message>
                      <stack-trace>at $primaryKeys | Should -Not -BeNullOrEmpty, /workspaces/ps-sqlite/tests/Utils/DataAccess/DatabaseUtils.Tests.ps1:301
at &lt;ScriptBlock&gt;, /workspaces/ps-sqlite/tests/Utils/DataAccess/DatabaseUtils.Tests.ps1:301</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="should validate nullable constraints" name="DatabaseUtils (データアクセス層) テスト.Database Schema Validation.should validate nullable constraints" time="0.0043" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="DatabaseUtils (データアクセス層) テスト.SQL Generation Integration" executed="True" result="Failure" success="False" time="0.5188" asserts="0" description="DatabaseUtils (データアクセス層) テスト.SQL Generation Integration">
                <results>
                  <test-case description="should generate complete CRUD operations for a table" name="DatabaseUtils (データアクセス層) テスト.SQL Generation Integration.should generate complete CRUD operations for a table" time="0.0266" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>CommandNotFoundException: The term 'New-InsertSQL' is not recognized as a name of a cmdlet, function, script file, or executable program.
Check the spelling of the name, or if a path was included, verify that the path is correct and try again.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, /workspaces/ps-sqlite/tests/Utils/DataAccess/DatabaseUtils.Tests.ps1:321</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="should maintain consistency across different SQL operations" name="DatabaseUtils (データアクセス層) テスト.SQL Generation Integration.should maintain consistency across different SQL operations" time="0.0273" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>CommandNotFoundException: The term 'New-InsertSQL' is not recognized as a name of a cmdlet, function, script file, or executable program.
Check the spelling of the name, or if a path was included, verify that the path is correct and try again.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, /workspaces/ps-sqlite/tests/Utils/DataAccess/DatabaseUtils.Tests.ps1:343</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="DatabaseUtils (データアクセス層) テスト.Error Handling and Edge Cases" executed="True" result="Failure" success="False" time="0.5642" asserts="0" description="DatabaseUtils (データアクセス層) テスト.Error Handling and Edge Cases">
                <results>
                  <test-case description="should handle empty table definitions gracefully" name="DatabaseUtils (データアクセス層) テスト.Error Handling and Edge Cases.should handle empty table definitions gracefully" time="0.0167" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected no exception to be thrown, but an exception "テーブル定義が見つかりません: empty_table (ベーステーブル: empty_table)" was thrown from /workspaces/ps-sqlite/scripts/modules/Utils/DataAccess/DatabaseUtils.psm1:22 char:9
    +         throw "テーブル定義が見つかりません: $TableName (ベーステーブル: $baseTableName)"
    +         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~.</message>
                      <stack-trace>at { Get-TableDefinition -TableName "empty_table" } | Should -Not -Throw, /workspaces/ps-sqlite/tests/Utils/DataAccess/DatabaseUtils.Tests.ps1:366
at &lt;ScriptBlock&gt;, /workspaces/ps-sqlite/tests/Utils/DataAccess/DatabaseUtils.Tests.ps1:366</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="should validate SQL injection prevention" name="DatabaseUtils (データアクセス層) テスト.Error Handling and Edge Cases.should validate SQL injection prevention" time="0.0083" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="should handle very long table and column names" name="DatabaseUtils (データアクセス層) テスト.Error Handling and Edge Cases.should handle very long table and column names" time="0.0098" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="DatabaseUtils (データアクセス層) テスト.Performance and Optimization" executed="True" result="Failure" success="False" time="0.6021" asserts="0" description="DatabaseUtils (データアクセス層) テスト.Performance and Optimization">
                <results>
                  <test-case description="should generate SQL efficiently for large schemas" name="DatabaseUtils (データアクセス層) テスト.Performance and Optimization.should generate SQL efficiently for large schemas" time="0.0192" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>CommandNotFoundException: The term 'New-InsertSQL' is not recognized as a name of a cmdlet, function, script file, or executable program.
Check the spelling of the name, or if a path was included, verify that the path is correct and try again.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, /workspaces/ps-sqlite/tests/Utils/DataAccess/DatabaseUtils.Tests.ps1:392
at &lt;ScriptBlock&gt;, /workspaces/ps-sqlite/tests/Utils/DataAccess/DatabaseUtils.Tests.ps1:390</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="should cache table definitions for repeated access" name="DatabaseUtils (データアクセス層) テスト.Performance and Optimization.should cache table definitions for repeated access" time="0.0109" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="/workspaces/ps-sqlite/tests/Utils/DataAccess/FileSystemUtils.Tests.ps1" executed="True" result="Success" success="True" time="0.7061" asserts="0" description="/workspaces/ps-sqlite/tests/Utils/DataAccess/FileSystemUtils.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="FileSystemUtils (データアクセス層) テスト" executed="True" result="Success" success="True" time="0.2547" asserts="0" description="FileSystemUtils (データアクセス層) テスト">
            <results>
              <test-suite type="TestFixture" name="FileSystemUtils (データアクセス層) テスト.Layer Architecture Validation" executed="True" result="Success" success="True" time="0.0193" asserts="0" description="FileSystemUtils (データアクセス層) テスト.Layer Architecture Validation">
                <results>
                  <test-case description="基盤層とインフラストラクチャ層に依存するLayer 3であること" name="FileSystemUtils (データアクセス層) テスト.Layer Architecture Validation.基盤層とインフラストラクチャ層に依存するLayer 3であること" time="0.01" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="下位層関数を使用すること" name="FileSystemUtils (データアクセス層) テスト.Layer Architecture Validation.下位層関数を使用すること" time="0.0025" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="FileSystemUtils (データアクセス層) テスト.Resolve-FilePath Function - Path Resolution" executed="True" result="Success" success="True" time="0.0542" asserts="0" description="FileSystemUtils (データアクセス層) テスト.Resolve-FilePath Function - Path Resolution">
                <results>
                  <test-case description="should resolve absolute paths correctly" name="FileSystemUtils (データアクセス層) テスト.Resolve-FilePath Function - Path Resolution.should resolve absolute paths correctly" time="0.0069" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="should resolve relative paths from project root" name="FileSystemUtils (データアクセス層) テスト.Resolve-FilePath Function - Path Resolution.should resolve relative paths from project root" time="0.0063" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="should handle path with spaces" name="FileSystemUtils (データアクセス層) テスト.Resolve-FilePath Function - Path Resolution.should handle path with spaces" time="0.003" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="should handle Windows and Unix path separators" name="FileSystemUtils (データアクセス層) テスト.Resolve-FilePath Function - Path Resolution.should handle Windows and Unix path separators" time="0.0067" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="should handle path normalization" name="FileSystemUtils (データアクセス層) テスト.Resolve-FilePath Function - Path Resolution.should handle path normalization" time="0.0044" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="FileSystemUtils (データアクセス層) テスト.New-HistoryFileName Function - Filename Generation" executed="True" result="Success" success="True" time="0.0804" asserts="0" description="FileSystemUtils (データアクセス層) テスト.New-HistoryFileName Function - Filename Generation">
                <results>
                  <test-case description="should generate history filename with timestamp" name="FileSystemUtils (データアクセス層) テスト.New-HistoryFileName Function - Filename Generation.should generate history filename with timestamp" time="0.005" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="should handle custom extension" name="FileSystemUtils (データアクセス層) テスト.New-HistoryFileName Function - Filename Generation.should handle custom extension" time="0.0032" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="should handle filename without extension" name="FileSystemUtils (データアクセス層) テスト.New-HistoryFileName Function - Filename Generation.should handle filename without extension" time="0.0065" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="FileSystemUtils (データアクセス層) テスト.Copy-InputFileToHistory Function - File History Operations" executed="True" result="Success" success="True" time="0.1918" asserts="0" description="FileSystemUtils (データアクセス層) テスト.Copy-InputFileToHistory Function - File History Operations">
                <results>
                  <test-case description="should copy file to history directory" name="FileSystemUtils (データアクセス層) テスト.Copy-InputFileToHistory Function - File History Operations.should copy file to history directory" time="0.0454" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="should create history directory if it doesn't exist" name="FileSystemUtils (データアクセス層) テスト.Copy-InputFileToHistory Function - File History Operations.should create history directory if it doesn't exist" time="0.0175" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="should throw error if source file doesn't exist" name="FileSystemUtils (データアクセス層) テスト.Copy-InputFileToHistory Function - File History Operations.should throw error if source file doesn't exist" time="0.0056" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="should preserve file content during copy" name="FileSystemUtils (データアクセス層) テスト.Copy-InputFileToHistory Function - File History Operations.should preserve file content during copy" time="0.0337" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="FileSystemUtils (データアクセス層) テスト.Integration with Lower Layers" executed="True" result="Success" success="True" time="0.2478" asserts="0" description="FileSystemUtils (データアクセス層) テスト.Integration with Lower Layers">
                <results>
                  <test-case description="should use Foundation layer timestamp functions" name="FileSystemUtils (データアクセス層) テスト.Integration with Lower Layers.should use Foundation layer timestamp functions" time="0.0029" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="should use Foundation layer encoding functions" name="FileSystemUtils (データアクセス層) テスト.Integration with Lower Layers.should use Foundation layer encoding functions" time="0.0252" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="should use Infrastructure layer logging functions" name="FileSystemUtils (データアクセス層) テスト.Integration with Lower Layers.should use Infrastructure layer logging functions" time="0.0173" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="/workspaces/ps-sqlite/tests/Utils/DataProcessing/CsvProcessingUtils.Tests.ps1" executed="True" result="Failure" success="False" time="1.8213" asserts="0" description="/workspaces/ps-sqlite/tests/Utils/DataProcessing/CsvProcessingUtils.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="CsvProcessingUtils (データ処理層) テスト" executed="True" result="Failure" success="False" time="1.3147" asserts="0" description="CsvProcessingUtils (データ処理層) テスト">
            <results>
              <test-suite type="TestFixture" name="CsvProcessingUtils (データ処理層) テスト.Layer Architecture Validation" executed="True" result="Success" success="True" time="0.0229" asserts="0" description="CsvProcessingUtils (データ処理層) テスト.Layer Architecture Validation">
                <results>
                  <test-case description="すべての下位層依存関係を持つLayer 4であること" name="CsvProcessingUtils (データ処理層) テスト.Layer Architecture Validation.すべての下位層依存関係を持つLayer 4であること" time="0.0052" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="下位層関数を使用すること" name="CsvProcessingUtils (データ処理層) テスト.Layer Architecture Validation.下位層関数を使用すること" time="0.011" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="CsvProcessingUtils (データ処理層) テスト.ConvertTo-CsvData Function - Output Generation" executed="True" result="Failure" success="False" time="0.1027" asserts="0" description="CsvProcessingUtils (データ処理層) テスト.ConvertTo-CsvData Function - Output Generation">
                <results>
                  <test-case description="データオブジェクトからCSV内容を生成すること" name="CsvProcessingUtils (データ処理層) テスト.ConvertTo-CsvData Function - Output Generation.データオブジェクトからCSV内容を生成すること" time="0.0142" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>CommandNotFoundException: The term 'ConvertTo-CsvData' is not recognized as a name of a cmdlet, function, script file, or executable program.
Check the spelling of the name, or if a path was included, verify that the path is correct and try again.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, /workspaces/ps-sqlite/tests/Utils/DataProcessing/CsvProcessingUtils.Tests.ps1:48</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="デフォルトでヘッダーを含むこと" name="CsvProcessingUtils (データ処理層) テスト.ConvertTo-CsvData Function - Output Generation.デフォルトでヘッダーを含むこと" time="0.0159" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>CommandNotFoundException: The term 'ConvertTo-CsvData' is not recognized as a name of a cmdlet, function, script file, or executable program.
Check the spelling of the name, or if a path was included, verify that the path is correct and try again.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, /workspaces/ps-sqlite/tests/Utils/DataProcessing/CsvProcessingUtils.Tests.ps1:61</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="空のデータを適切に処理すること" name="CsvProcessingUtils (データ処理層) テスト.ConvertTo-CsvData Function - Output Generation.空のデータを適切に処理すること" time="0.0179" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>CommandNotFoundException: The term 'ConvertTo-CsvData' is not recognized as a name of a cmdlet, function, script file, or executable program.
Check the spelling of the name, or if a path was included, verify that the path is correct and try again.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, /workspaces/ps-sqlite/tests/Utils/DataProcessing/CsvProcessingUtils.Tests.ps1:69</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="CSV特殊文字をエスケープすること" name="CsvProcessingUtils (データ処理層) テスト.ConvertTo-CsvData Function - Output Generation.CSV特殊文字をエスケープすること" time="0.0202" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>CommandNotFoundException: The term 'ConvertTo-CsvData' is not recognized as a name of a cmdlet, function, script file, or executable program.
Check the spelling of the name, or if a path was included, verify that the path is correct and try again.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, /workspaces/ps-sqlite/tests/Utils/DataProcessing/CsvProcessingUtils.Tests.ps1:80</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="CsvProcessingUtils (データ処理層) テスト.Import-CsvToDatabase Function - Database Integration" executed="True" result="Failure" success="False" time="0.2079" asserts="0" description="CsvProcessingUtils (データ処理層) テスト.Import-CsvToDatabase Function - Database Integration">
                <results>
                  <test-case description="CSVデータをデータベースにインポートすること" name="CsvProcessingUtils (データ処理層) テスト.Import-CsvToDatabase Function - Database Integration.CSVデータをデータベースにインポートすること" time="0.0231" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>CommandNotFoundException: The term 'Import-CsvToDatabase' is not recognized as a name of a cmdlet, function, script file, or executable program.
Check the spelling of the name, or if a path was included, verify that the path is correct and try again.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, /workspaces/ps-sqlite/tests/Utils/DataProcessing/CsvProcessingUtils.Tests.ps1:93</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="インポートエラーを適切に処理すること" name="CsvProcessingUtils (データ処理層) テスト.Import-CsvToDatabase Function - Database Integration.インポートエラーを適切に処理すること" time="0.0159" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>CommandNotFoundException: The term 'Import-CsvToDatabase' is not recognized as a name of a cmdlet, function, script file, or executable program.
Check the spelling of the name, or if a path was included, verify that the path is correct and try again.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, /workspaces/ps-sqlite/tests/Utils/DataProcessing/CsvProcessingUtils.Tests.ps1:105</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="インポート時に必須フィールドを検証すること" name="CsvProcessingUtils (データ処理層) テスト.Import-CsvToDatabase Function - Database Integration.インポート時に必須フィールドを検証すること" time="0.0214" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>CommandNotFoundException: The term 'Import-CsvToDatabase' is not recognized as a name of a cmdlet, function, script file, or executable program.
Check the spelling of the name, or if a path was included, verify that the path is correct and try again.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, /workspaces/ps-sqlite/tests/Utils/DataProcessing/CsvProcessingUtils.Tests.ps1:116</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="大量データセットのバッチ処理をサポートすること" name="CsvProcessingUtils (データ処理層) テスト.Import-CsvToDatabase Function - Database Integration.大量データセットのバッチ処理をサポートすること" time="0.036" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>CommandNotFoundException: The term 'Import-CsvToDatabase' is not recognized as a name of a cmdlet, function, script file, or executable program.
Check the spelling of the name, or if a path was included, verify that the path is correct and try again.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, /workspaces/ps-sqlite/tests/Utils/DataProcessing/CsvProcessingUtils.Tests.ps1:128</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="CsvProcessingUtils (データ処理層) テスト.Export-DatabaseToCsv Function - Database Export" executed="True" result="Failure" success="False" time="0.2685" asserts="0" description="CsvProcessingUtils (データ処理層) テスト.Export-DatabaseToCsv Function - Database Export">
                <results>
                  <test-case description="データベースデータをCSVにエクスポートすること" name="CsvProcessingUtils (データ処理層) テスト.Export-DatabaseToCsv Function - Database Export.データベースデータをCSVにエクスポートすること" time="0.0189" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>CommandNotFoundException: The term 'Import-CsvToDatabase' is not recognized as a name of a cmdlet, function, script file, or executable program.
Check the spelling of the name, or if a path was included, verify that the path is correct and try again.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, /workspaces/ps-sqlite/tests/Utils/DataProcessing/CsvProcessingUtils.Tests.ps1:140</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="カスタムWHERE句を処理すること" name="CsvProcessingUtils (データ処理層) テスト.Export-DatabaseToCsv Function - Database Export.カスタムWHERE句を処理すること" time="0.0156" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>CommandNotFoundException: The term 'Export-DatabaseToCsv' is not recognized as a name of a cmdlet, function, script file, or executable program.
Check the spelling of the name, or if a path was included, verify that the path is correct and try again.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, /workspaces/ps-sqlite/tests/Utils/DataProcessing/CsvProcessingUtils.Tests.ps1:154</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="カスタム列選択をサポートすること" name="CsvProcessingUtils (データ処理層) テスト.Export-DatabaseToCsv Function - Database Export.カスタム列選択をサポートすること" time="0.0159" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>CommandNotFoundException: The term 'Export-DatabaseToCsv' is not recognized as a name of a cmdlet, function, script file, or executable program.
Check the spelling of the name, or if a path was included, verify that the path is correct and try again.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, /workspaces/ps-sqlite/tests/Utils/DataProcessing/CsvProcessingUtils.Tests.ps1:162</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="CsvProcessingUtils (データ処理層) テスト.UTF-8 and Japanese Character Handling" executed="True" result="Failure" success="False" time="0.3226" asserts="0" description="CsvProcessingUtils (データ処理層) テスト.UTF-8 and Japanese Character Handling">
                <results>
                  <test-case description="日本語文字を正しく処理すること" name="CsvProcessingUtils (データ処理層) テスト.UTF-8 and Japanese Character Handling.日本語文字を正しく処理すること" time="0.0173" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected strings to be the same, but they were different.
Expected length: 4
Actual length:   5
Strings differ at index 0.
Expected: '田中太郎'
But was:  'テスト太郎'
           ^</message>
                      <stack-trace>at $result[0].name | Should -Be "田中太郎", /workspaces/ps-sqlite/tests/Utils/DataProcessing/CsvProcessingUtils.Tests.ps1:182
at &lt;ScriptBlock&gt;, /workspaces/ps-sqlite/tests/Utils/DataProcessing/CsvProcessingUtils.Tests.ps1:182</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="UTF-8 BOMを処理すること" name="CsvProcessingUtils (データ処理層) テスト.UTF-8 and Japanese Character Handling.UTF-8 BOMを処理すること" time="0.0087" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="ラウンドトリップ時に日本語文字を保持すること" name="CsvProcessingUtils (データ処理層) テスト.UTF-8 and Japanese Character Handling.ラウンドトリップ時に日本語文字を保持すること" time="0.0173" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>CommandNotFoundException: The term 'ConvertTo-CsvData' is not recognized as a name of a cmdlet, function, script file, or executable program.
Check the spelling of the name, or if a path was included, verify that the path is correct and try again.</message>
                      <stack-trace>at &lt;ScriptBlock&gt;, /workspaces/ps-sqlite/tests/Utils/DataProcessing/CsvProcessingUtils.Tests.ps1:203</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="CsvProcessingUtils (データ処理層) テスト.CSV Format and Delimiter Handling" executed="True" result="Failure" success="False" time="0.3816" asserts="0" description="CsvProcessingUtils (データ処理層) テスト.CSV Format and Delimiter Handling">
                <results>
                  <test-case description="異なる区切り文字を処理すること" name="CsvProcessingUtils (データ処理層) テスト.CSV Format and Delimiter Handling.異なる区切り文字を処理すること" time="0.0131" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="区切り文字を含むクォート付きフィールドを処理すること" name="CsvProcessingUtils (データ処理層) テスト.CSV Format and Delimiter Handling.区切り文字を含むクォート付きフィールドを処理すること" time="0.0135" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected '説明文,カンマ付き', but got $null.</message>
                      <stack-trace>at $result[0].description | Should -Be "説明文,カンマ付き", /workspaces/ps-sqlite/tests/Utils/DataProcessing/CsvProcessingUtils.Tests.ps1:227
at &lt;ScriptBlock&gt;, /workspaces/ps-sqlite/tests/Utils/DataProcessing/CsvProcessingUtils.Tests.ps1:227</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="空フィールドを処理すること" name="CsvProcessingUtils (データ処理層) テスト.CSV Format and Delimiter Handling.空フィールドを処理すること" time="0.0154" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected $null or empty, but got 'テスト太郎'.</message>
                      <stack-trace>at $result[0].name | Should -BeNullOrEmpty, /workspaces/ps-sqlite/tests/Utils/DataProcessing/CsvProcessingUtils.Tests.ps1:235
at &lt;ScriptBlock&gt;, /workspaces/ps-sqlite/tests/Utils/DataProcessing/CsvProcessingUtils.Tests.ps1:235</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="行末文字のバリエーションを処理すること" name="CsvProcessingUtils (データ処理層) テスト.CSV Format and Delimiter Handling.行末文字のバリエーションを処理すること" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="CsvProcessingUtils (データ処理層) テスト.Error Handling and Data Validation" executed="True" result="Failure" success="False" time="1.0741" asserts="0" description="CsvProcessingUtils (データ処理層) テスト.Error Handling and Data Validation">
                <results>
                  <test-case description="不正な形式のCSVを適切に処理すること" name="CsvProcessingUtils (データ処理層) テスト.Error Handling and Data Validation.不正な形式のCSVを適切に処理すること" time="0.0026" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="データ型を検証すること" name="CsvProcessingUtils (データ処理層) テスト.Error Handling and Data Validation.データ型を検証すること" time="0.0128" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 'invalid-date', but got $null.</message>
                      <stack-trace>at $result[0].hire_date | Should -Be "invalid-date", /workspaces/ps-sqlite/tests/Utils/DataProcessing/CsvProcessingUtils.Tests.ps1:270
at &lt;ScriptBlock&gt;, /workspaces/ps-sqlite/tests/Utils/DataProcessing/CsvProcessingUtils.Tests.ps1:270</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="非常に大きなCSVファイルを処理すること" name="CsvProcessingUtils (データ処理層) テスト.Error Handling and Data Validation.非常に大きなCSVファイルを処理すること" time="0.1135" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected 1000, but got 2.</message>
                      <stack-trace>at $result.Count | Should -Be 1000, /workspaces/ps-sqlite/tests/Utils/DataProcessing/CsvProcessingUtils.Tests.ps1:283
at &lt;ScriptBlock&gt;, /workspaces/ps-sqlite/tests/Utils/DataProcessing/CsvProcessingUtils.Tests.ps1:283</stack-trace>
                    </failure>
                  </test-case>
                  <test-case description="並行CSV処理を処理すること" name="CsvProcessingUtils (データ処理層) テスト.Error Handling and Data Validation.並行CSV処理を処理すること" time="0.5558" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a collection with size 3, but got an empty collection.</message>
                      <stack-trace>at $results | Should -HaveCount 3, /workspaces/ps-sqlite/tests/Utils/DataProcessing/CsvProcessingUtils.Tests.ps1:316
at &lt;ScriptBlock&gt;, /workspaces/ps-sqlite/tests/Utils/DataProcessing/CsvProcessingUtils.Tests.ps1:316</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="CsvProcessingUtils (データ処理層) テスト.Performance and Memory Management" executed="True" result="Success" success="True" time="1.2785" asserts="0" description="CsvProcessingUtils (データ処理層) テスト.Performance and Memory Management">
                <results>
                  <test-case description="CSVを効率的に処理すること" name="CsvProcessingUtils (データ処理層) テスト.Performance and Memory Management.CSVを効率的に処理すること" time="0.0137" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="繰り返し操作でメモリリークしないこと" name="CsvProcessingUtils (データ処理層) テスト.Performance and Memory Management.繰り返し操作でメモリリークしないこと" time="0.1837" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="CsvProcessingUtils (データ処理層) テスト.Integration with Lower Layers" executed="True" result="Failure" success="False" time="1.3078" asserts="0" description="CsvProcessingUtils (データ処理層) テスト.Integration with Lower Layers">
                <results>
                  <test-case description="基盤層のエンコーディング関数を使用すること" name="CsvProcessingUtils (データ処理層) テスト.Integration with Lower Layers.基盤層のエンコーディング関数を使用すること" time="0.0041" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="インフラストラクチャ層の設定を使用すること" name="CsvProcessingUtils (データ処理層) テスト.Integration with Lower Layers.インフラストラクチャ層の設定を使用すること" time="0.0061" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="データアクセス層のデータベース関数を使用すること" name="CsvProcessingUtils (データ処理層) テスト.Integration with Lower Layers.データアクセス層のデータベース関数を使用すること" time="0.0114" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>Expected a value, but got $null or empty.</message>
                      <stack-trace>at $columns | Should -Not -BeNullOrEmpty, /workspaces/ps-sqlite/tests/Utils/DataProcessing/CsvProcessingUtils.Tests.ps1:376
at &lt;ScriptBlock&gt;, /workspaces/ps-sqlite/tests/Utils/DataProcessing/CsvProcessingUtils.Tests.ps1:376</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="/workspaces/ps-sqlite/tests/Utils/DataProcessing/DataFilteringUtils.Tests.ps1" executed="True" result="Failure" success="False" time="0.9734" asserts="0" description="/workspaces/ps-sqlite/tests/Utils/DataProcessing/DataFilteringUtils.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="DataFilteringUtils (データ処理層) テスト" executed="True" result="Failure" success="False" time="0.5091" asserts="0" description="DataFilteringUtils (データ処理層) テスト">
            <results>
              <test-suite type="TestFixture" name="DataFilteringUtils (データ処理層) テスト.レイヤーアーキテクチャ検証" executed="True" result="Success" success="True" time="0.0162" asserts="0" description="DataFilteringUtils (データ処理層) テスト.レイヤーアーキテクチャ検証">
                <results>
                  <test-case description="Layer 4 ですべての下位層依存関係を持つこと" name="DataFilteringUtils (データ処理層) テスト.レイヤーアーキテクチャ検証.Layer 4 ですべての下位層依存関係を持つこと" time="0.0075" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="下位層関数を使用すること" name="DataFilteringUtils (データ処理層) テスト.レイヤーアーキテクチャ検証.下位層関数を使用すること" time="0.0023" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="DataFilteringUtils (データ処理層) テスト.New-TempTableName 関数" executed="True" result="Success" success="True" time="0.0304" asserts="0" description="DataFilteringUtils (データ処理層) テスト.New-TempTableName 関数">
                <results>
                  <test-case description="ベーステーブル名から一時テーブル名を生成すること" name="DataFilteringUtils (データ処理層) テスト.New-TempTableName 関数.ベーステーブル名から一時テーブル名を生成すること" time="0.0027" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="異なるテーブル名でも正しく生成すること" name="DataFilteringUtils (データ処理層) テスト.New-TempTableName 関数.異なるテーブル名でも正しく生成すること" time="0.0025" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="空白を含むテーブル名を適切に処理すること" name="DataFilteringUtils (データ処理層) テスト.New-TempTableName 関数.空白を含むテーブル名を適切に処理すること" time="0.0024" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="DataFilteringUtils (データ処理層) テスト.Show-FilteringStatistics 関数" executed="True" result="Success" success="True" time="0.1698" asserts="0" description="DataFilteringUtils (データ処理層) テスト.Show-FilteringStatistics 関数">
                <results>
                  <test-case description="フィルタ適用時の統計を正しく表示すること" name="DataFilteringUtils (データ処理層) テスト.Show-FilteringStatistics 関数.フィルタ適用時の統計を正しく表示すること" time="0.0525" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="フィルタなしの場合の統計を正しく表示すること" name="DataFilteringUtils (データ処理層) テスト.Show-FilteringStatistics 関数.フィルタなしの場合の統計を正しく表示すること" time="0.0348" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="ゼロ件データの統計を正しく処理すること" name="DataFilteringUtils (データ処理層) テスト.Show-FilteringStatistics 関数.ゼロ件データの統計を正しく処理すること" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="DataFilteringUtils (データ処理層) テスト.Save-ExcludedDataForKeep 関数 - 統合テスト" executed="True" result="Failure" success="False" time="0.3366" asserts="0" description="DataFilteringUtils (データ処理層) テスト.Save-ExcludedDataForKeep 関数 - 統合テスト">
                <results>
                  <test-case description="除外データのテーブル保存が正常に動作すること" name="DataFilteringUtils (データ処理層) テスト.Save-ExcludedDataForKeep 関数 - 統合テスト.除外データのテーブル保存が正常に動作すること" time="0.0896" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>CommandNotFoundException: Could not find Command Get-CsvColumns</message>
                      <stack-trace />
                    </failure>
                  </test-case>
                  <test-case description="フィルタ条件がない場合にスキップすること" name="DataFilteringUtils (データ処理層) テスト.Save-ExcludedDataForKeep 関数 - 統合テスト.フィルタ条件がない場合にスキップすること" time="0.0648" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="DataFilteringUtils (データ処理層) テスト.エラーハンドリングと境界値テスト" executed="True" result="Success" success="True" time="0.4145" asserts="0" description="DataFilteringUtils (データ処理層) テスト.エラーハンドリングと境界値テスト">
                <results>
                  <test-case description="New-TempTableName が必須パラメータを要求すること" name="DataFilteringUtils (データ処理層) テスト.エラーハンドリングと境界値テスト.New-TempTableName が必須パラメータを要求すること" time="0.0045" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Show-FilteringStatistics が無効なパラメータで例外を発生すること" name="DataFilteringUtils (データ処理層) テスト.エラーハンドリングと境界値テスト.Show-FilteringStatistics が無効なパラメータで例外を発生すること" time="0.0228" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="統計計算で正しい比率を計算すること" name="DataFilteringUtils (データ処理層) テスト.エラーハンドリングと境界値テスト.統計計算で正しい比率を計算すること" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="DataFilteringUtils (データ処理層) テスト.パフォーマンステスト" executed="True" result="Success" success="True" time="0.464" asserts="0" description="DataFilteringUtils (データ処理層) テスト.パフォーマンステスト">
                <results>
                  <test-case description="大量データでのShow-FilteringStatisticsが効率的に動作すること" name="DataFilteringUtils (データ処理層) テスト.パフォーマンステスト.大量データでのShow-FilteringStatisticsが効率的に動作すること" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="DataFilteringUtils (データ処理層) テスト.統合テストシナリオ" executed="True" result="Success" success="True" time="0.5018" asserts="0" description="DataFilteringUtils (データ処理層) テスト.統合テストシナリオ">
                <results>
                  <test-case description="基盤層のユーティリティを使用すること" name="DataFilteringUtils (データ処理層) テスト.統合テストシナリオ.基盤層のユーティリティを使用すること" time="0.0078" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="ログ機能が正常に動作すること" name="DataFilteringUtils (データ処理層) テスト.統合テストシナリオ.ログ機能が正常に動作すること" time="0.0201" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="/workspaces/ps-sqlite/tests/Integration/FullSystem.Tests.ps1" executed="True" result="Failure" success="False" time="1.8428" asserts="0" description="/workspaces/ps-sqlite/tests/Integration/FullSystem.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="全システム統合テスト" executed="True" result="Failure" success="False" time="1.5479" asserts="0" description="全システム統合テスト">
            <results>
              <test-suite type="TestFixture" name="全システム統合テスト.エンドツーエンドデータ同期" executed="True" result="Failure" success="False" time="0.0445" asserts="0" description="全システム統合テスト.エンドツーエンドデータ同期">
                <results>
                  <test-case description="基本同期ワークフローを完了すること" name="全システム統合テスト.エンドツーエンドデータ同期.基本同期ワークフローを完了すること" time="0.0209" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="同期中のフィルタリングを処理すること" name="全システム統合テスト.エンドツーエンドデータ同期.同期中のフィルタリングを処理すること" time="0.005" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="エッジケースを適切に処理すること" name="全システム統合テスト.エンドツーエンドデータ同期.エッジケースを適切に処理すること" time="0.0111" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>RuntimeException: Method invocation failed because [System.Management.Automation.PSCustomObject] does not contain a method named 'ContainsKey'.</message>
                      <stack-trace>at Test-MockDataIntegrity, /workspaces/ps-sqlite/tests/TestHelpers/MockHelpers.psm1:479
at &lt;ScriptBlock&gt;, /workspaces/ps-sqlite/tests/Integration/FullSystem.Tests.ps1:110</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="全システム統合テスト.設定統合" executed="True" result="Success" success="True" time="0.0989" asserts="0" description="全システム統合テスト.設定統合">
                <results>
                  <test-case description="設定を読み込み検証すること" name="全システム統合テスト.設定統合.設定を読み込み検証すること" time="0.0195" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="設定のバリエーションを処理すること" name="全システム統合テスト.設定統合.設定のバリエーションを処理すること" time="0.0163" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="全システム統合テスト.エラーハンドリングと復旧" executed="True" result="Success" success="True" time="0.1248" asserts="0" description="全システム統合テスト.エラーハンドリングと復旧">
                <results>
                  <test-case description="入力ファイルの欠如を処理すること" name="全システム統合テスト.エラーハンドリングと復旧.入力ファイルの欠如を処理すること" time="0.0098" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="データベース接続エラーを処理すること" name="全システム統合テスト.エラーハンドリングと復旧.データベース接続エラーを処理すること" time="0.0043" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="意味のあるエラーメッセージを提供すること" name="全システム統合テスト.エラーハンドリングと復旧.意味のあるエラーメッセージを提供すること" time="0.0047" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="全システム統合テスト.パフォーマンスとスケール" executed="True" result="Success" success="True" time="1.4759" asserts="0" description="全システム統合テスト.パフォーマンスとスケール">
                <results>
                  <test-case description="適切なデータ量を効率的に処理すること" name="全システム統合テスト.パフォーマンスとスケール.適切なデータ量を効率的に処理すること" time="1.0242" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="一貨したメモリ使用量を維持すること" name="全システム統合テスト.パフォーマンスとスケール.一貨したメモリ使用量を維持すること" time="0.3174" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="全システム統合テスト.データ整合性と一貨性" executed="True" result="Success" success="True" time="1.5401" asserts="0" description="全システム統合テスト.データ整合性と一貨性">
                <results>
                  <test-case description="参照整合性を維持すること" name="全システム統合テスト.データ整合性と一貨性.参照整合性を維持すること" time="0.0457" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="重複レコードを検出し処理すること" name="全システム統合テスト.データ整合性と一貨性.重複レコードを検出し処理すること" time="0.0105" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="システムコンポーネント統合テスト" executed="True" result="Success" success="True" time="1.6001" asserts="0" description="システムコンポーネント統合テスト">
            <results>
              <test-suite type="TestFixture" name="システムコンポーネント統合テスト.モジュール間連携" executed="True" result="Success" success="True" time="0.0283" asserts="0" description="システムコンポーネント統合テスト.モジュール間連携">
                <results>
                  <test-case description="CSV処理とデータフィルタリングを統合すること" name="システムコンポーネント統合テスト.モジュール間連携.CSV処理とデータフィルタリングを統合すること" time="0.0151" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="データベース操作と同期ロジックを統合すること" name="システムコンポーネント統合テスト.モジュール間連携.データベース操作と同期ロジックを統合すること" time="0.0064" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="システムコンポーネント統合テスト.設定駆動処理" executed="True" result="Success" success="True" time="0.0451" asserts="0" description="システムコンポーネント統合テスト.設定駆動処理">
                <results>
                  <test-case description="異なるテーブルスキーマに適応すること" name="システムコンポーネント統合テスト.設定駆動処理.異なるテーブルスキーマに適応すること" time="0.01" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="/workspaces/ps-sqlite/tests/Feature/ExcludedDataKeepOutput.Tests.ps1" executed="True" result="Failure" success="False" time="9.1317" asserts="0" description="/workspaces/ps-sqlite/tests/Feature/ExcludedDataKeepOutput.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="除外データKEEP出力機能" executed="True" result="Failure" success="False" time="9.0821" asserts="0" description="除外データKEEP出力機能">
            <results>
              <test-suite type="TestFixture" name="除外データKEEP出力機能.除外データKEEP出力が無効の場合" executed="True" result="Failure" success="False" time="4.5754" asserts="0" description="除外データKEEP出力機能.除外データKEEP出力が無効の場合">
                <results>
                  <test-case description="フィルタ除外されたcurrent_dataは出力されない" name="除外データKEEP出力機能.除外データKEEP出力が無効の場合.フィルタ除外されたcurrent_dataは出力されない" time="4.5593" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>RuntimeException: SQLite3の実行に失敗しました: sqlite3コマンドエラー (終了コード: 1 ,クエリ：SELECT syokuin_no, sync_action FROM sync_result WHERE syokuin_no LIKE 'Z%' ,結果：Parse error near line 1: no such table: sync_result ）</message>
                      <stack-trace>at Invoke-SqliteCommand, /workspaces/ps-sqlite/scripts/modules/Utils/Foundation/CoreUtils.psm1:91
at &lt;ScriptBlock&gt;, /workspaces/ps-sqlite/tests/Feature/ExcludedDataKeepOutput.Tests.ps1:213</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="除外データKEEP出力機能.除外データKEEP出力が有効の場合" executed="True" result="Failure" success="False" time="9.0707" asserts="0" description="除外データKEEP出力機能.除外データKEEP出力が有効の場合">
                <results>
                  <test-case description="フィルタ除外されたcurrent_dataがKEEPアクションで出力される" name="除外データKEEP出力機能.除外データKEEP出力が有効の場合.フィルタ除外されたcurrent_dataがKEEPアクションで出力される" time="4.4804" asserts="0" success="False" result="Failure" executed="True">
                    <failure>
                      <message>RuntimeException: SQLite3の実行に失敗しました: sqlite3コマンドエラー (終了コード: 1 ,クエリ：SELECT syokuin_no, sync_action FROM sync_result WHERE syokuin_no LIKE 'Z%' ORDER BY syokuin_no ,結果：Parse error near line 1: no such table: sync_result ）</message>
                      <stack-trace>at Invoke-SqliteCommand, /workspaces/ps-sqlite/scripts/modules/Utils/Foundation/CoreUtils.psm1:91
at &lt;ScriptBlock&gt;, /workspaces/ps-sqlite/tests/Feature/ExcludedDataKeepOutput.Tests.ps1:249</stack-trace>
                    </failure>
                  </test-case>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>